null
0
false
new StringBuilder()
true
""
1
-1
new ArrayList<>()
entry.getValue()
new ArrayList<String>()
new HashMap<>()
entry.getKey()
System.currentTimeMillis()
new StringBuffer()
new Properties()
new HashSet<>()
new ByteArrayOutputStream()
iterator.next()
it.next()
new StringWriter()
iter.next()
new HashMap<String,String>()
new HashSet<String>()
new ArrayList()
Thread.currentThread().getContextClassLoader()
new HashMap<String,Object>()
new LinkedList<>()
new LinkedHashMap<>()
this
i.next()
new HashMap()
in.readInt()
new LinkedHashSet<>()
new ArrayList<Object>()
0.0
0L
Calendar.getInstance()
2
value
Integer.MAX_VALUE
args[0]
Lists.newArrayList()
DocumentBuilderFactory.newInstance()
new byte[length]
new TreeMap<>()
e.getValue()
System.nanoTime()
map.get(key)
new TreeSet<>()
in.read()
new Configuration()
e.getKey()
sb.toString()
Maps.newHashMap()
new JSONObject()
tokenizer.nextToken()
new LinkedList<String>()
st.nextToken()
Sets.newHashSet()
new Date()
new byte[len]
e.getCause()
start
i
method.getParameterTypes()
new HashSet()
Long.MAX_VALUE
3
builder.build()
Collections.emptyList()
new byte[1024]
offset
itr.next()
new ArrayList<Integer>()
name
new byte[4]
10
s.length()
(String)entry.getKey()
new byte[size]
Thread.currentThread()
new LinkedHashSet<String>()
new Vector()
new FileInputStream(file)
matcher.group(1)
path
index
UUID.randomUUID().toString()
4
new JSONArray()
new ArrayList<>(2)
getName()
length
new File(path)
name.lastIndexOf('.')
entry.getName()
-1L
pos
getValue()
matcher.group(2)
(String)value
new Hashtable()
next
s.charAt(i)
(String)iter.next()
in.readUTF()
value.toString()
e
root
size()
0.0f
(String)it.next()
TransformerFactory.newInstance()
Integer.MIN_VALUE
new Options()
reader.readLine()
method.getName()
node.getChildNodes()
str.length()
m.group(1)
(String)o
new byte[8]
1.0
Lists.newLinkedList()
Long.MIN_VALUE
in.readBoolean()
e.getMessage()
method.getReturnType()
doc.getDocumentElement()
new String[0]
new String[2]
new ArrayList<>(1)
args[1]
new ArrayList<T>()
new File(fileName)
new byte[4096]
31
element.getChildNodes()
in.readLong()
parts[0]
file.getName()
get()
new ArrayList<File>()
new ObjectMapper()
5
(Element)node
len
new HashMap<String,Integer>()
get(key)
new ArrayList<URL>()
new LinkedList()
System.getProperties()
(String)entry.getValue()
new HashMap<String,List<String>>()
stack.pop()
new TreeSet<String>()
in.readByte()
new byte[16]
new LinkedHashMap<String,String>()
new byte[1]
8
new JPanel()
new AtomicBoolean(false)
ImmutableList.builder()
new Stack<>()
new Label()
url.openConnection()
read()
end - start
(String)e.nextElement()
data.length
request.getRequestURI()
(HttpServletRequest)request
input.readInt()
children.item(i)
getParent()
new AttributesImpl()
new int[bufsize + 2048]
new ArrayList<Long>()
new Configuration(false)
new BitSet()
1L << (curChar & 077)
new Text()
100
key
new StringBuilder("")
1000
n
new int[1]
ImmutableMap.builder()
new String[size]
is.read()
new JsonObject()
new AtomicInteger(0)
node
tok.nextToken()
properties.getProperty(key)
(ParameterizedType)type
WritableUtils.readVInt(in)
super.read()
args[i]
new Document()
new TreeMap<String,String>()
ImmutableSet.builder()
table
iterator()
Double.MAX_VALUE
text.length()
getType()
new SearchControls()
new Object[1]
e.nextElement()
new Random()
new ArrayDeque<>()
new String[1]
Class.forName(className)
new GregorianCalendar()
Sets.newLinkedHashSet()
parts[1]
Maps.newLinkedHashMap()
uri.getPath()
new ArrayList<Node>()
response.getOutputStream()
field.getType()
c
className.lastIndexOf('.')
path.lastIndexOf('/')
buf.toString()
getConnection()
0f
name.length()
new byte[BUFFER_SIZE]
ref.get()
new MimeBodyPart()
type
new AtomicReference<>()
super.hashCode()
field.getName()
args[2]
value.getClass()
node.getAttributes()
request.getPathInfo()
new GridBagConstraints()
HashMultimap.create()
context.getConfiguration()
new AtomicInteger()
new int[2]
job.getConfiguration()
Optional.empty()
buffer.position()
17
getState()
new HashMap<String,Long>()
parent
System.getSecurityManager()
{}
Collections.emptySet()
file.getParentFile()
SAXParserFactory.newInstance()
new Hashtable<String,Object>()
new LinkedHashMap<String,Object>()
count
new StringBuilder(128)
new CountDownLatch(1)
new Composite(parent,SWT.NONE)
url.openStream()
buffer.toString()
"unknown"
new JPanel(new BorderLayout())
new byte[0]
Double.POSITIVE_INFINITY
rs.getString(1)
current
new File(args[0])
token
jj_2_rtns[i]
new Hashtable<String,String>()
new SecureRandom()
(String)i.next()
new int[3]
cache.get(key)
st.nextToken().trim()
new ArrayList<>(3)
getSize()
Collections.emptyMap()
new HelpFormatter()
new HashSet<Class<?>>()
20
new FileOutputStream(file)
Double.NEGATIVE_INFINITY
new ConcurrentHashMap<>()
values[i]
list.get(0)
new String[3]
off
map.entrySet().iterator()
new Hashtable<>()
new ArrayList<>(size)
new File(filename)
new char[1024]
c.iterator()
value.length()
new StringBuilder(100)
list.iterator()
new HashMap<String,Set<String>>()
(String)iterator.next()
property.getName()
obj.getClass()
new ArrayList<Method>()
list.get(i)
object.getClass()
first
new LinkedHashMap()
buffer.remaining()
new byte[2]
new int[size]
new GridData()
new HashMap<>(1)
size
7
SecurityContextHolder.getContext().getAuthentication()
factory.newDocumentBuilder()
stack.peek()
new int[4]
new Object[2]
new ByteArrayInputStream(bytes)
new HashSet<Integer>()
getAttributes()
" "
new StringBuilder(200)
(String)key
new StringBuilder(64)
queue.poll()
new InitialContext()
response.getWriter()
Text.readString(in)
id
(Map.Entry)it.next()
new Vector<>()
new HashSet<Long>()
dialog.open()
buffer.getInt()
new JsonArray()
name.indexOf(':')
new ArrayList<Element>()
new byte[8192]
dir.listFiles()
br.readLine()
url.getFile()
file.listFiles()
new ArrayList<Class<?>>()
FileSystem.getLocal(conf)
path.length()
method.getParameterTypes()[0]
matcher.group(3)
System.currentTimeMillis() - start
m.group(2)
new TreeSet()
1.0f
new File(filePath)
new boolean[1]
baos.toByteArray()
next()
element.getAttributes()
request.getContextPath()
str.charAt(i)
this.value
(HttpServletResponse)response
reader.next()
s
super.next()
new DataOutputBuffer()
field.getModifiers()
dis.readUTF()
event.getSource()
Double.NaN
Instant.now()
0.0d
(TTupleProtocol)prot
new SolrInputDocument()
uri
entries.nextElement()
clazz.newInstance()
0d
50
f.getName()
nl.item(i)
fs.getFileStatus(path)
uri.lastIndexOf('/')
tokens.nextToken()
offset + length
new Metadata()
(String)in.readObject()
file.getPath()
Stopwatch.createStarted()
data[i]
args.get(0)
reader.read()
new ArrayList<Annotation>()
dataInput.readInt()
keys.nextElement()
array.length
clazz
i + 1
uri.getScheme()
Boolean.FALSE
Sets.newTreeSet()
new char[len]
mark()
nodes.item(i)
document.getDocumentElement()
{0}
childNodes.item(i)
new GridLayout(2,false)
new ButtonGroup()
new BasicDBObject()
new StringBuilder(256)
value.charAt(i)
(String)obj
path.getFileSystem(conf)
array[i]
new ArrayList<Path>()
new ArrayList<InputSplit>()
rs.getMetaData()
getContext()
new DataInputBuffer()
iprot.readListBegin()
matcher.group()
new File(dir)
new double[6]
rs.getString(2)
MessageDigest.getInstance("MD5")
Optional.absent()
item.getModelObject()
new CharArrayWriter()
6
node.getParent()
y
get(name)
1024
url.toString()
new Object[3]
new Path(path)
doc.createDocumentFragment()
getClassLoader()
buf.getInt()
new int[length]
text
in.readLine()
url
"0"
parameters.get(i)
nextToken()
new JPanel(new GridBagLayout())
UserGroupInformation.getCurrentUser()
InetAddress.getByName(host)
base
m.getParameterTypes()
query.getResultList()
System.currentTimeMillis() - startTime
end
str.toCharArray()
getProperty(key)
(String)keys.nextElement()
System.out
bytes.length
result.get()
list.size()
tokenizer.nextToken().trim()
m.getName()
width
ArrayListMultimap.create()
(Map.Entry)i.next()
path.getName()
arr[i]
file.getAbsolutePath()
Thread.currentThread().getName()
new float[3]
path.toString()
new ArrayList<Dependency>()
element.getFirstChild()
new IdentityHashMap<>()
new AtomicLong()
getDocument()
new DOMResult()
manifest.getMainAttributes()
new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32())
data
clazz.getName()
(Map.Entry)o
new Credentials()
new char[length]
args[3]
new ArrayList<Type>()
new File(location)
new StringBuilder(1024)
mapper.createObjectNode()
buffer.length()
chars[i]
new OptionGroup()
future.get()
name.lastIndexOf('/')
node.getNodeValue()
method.getParameterAnnotations()
new GridLayout()
getChildren()
new Stack()
(Composite)super.createDialogArea(parent)
System.getenv()
message
is.readInt()
CertificateFactory.getInstance("X.509")
new AtomicBoolean()
s.toCharArray()
map.get(name)
new Vector<String>()
attrs.getLength()
request.getQueryString()
node.getNodeType()
p.getName()
new double[2]
UserGroupInformation.getLoginUser()
new ArrayList<Map<String,Object>>()
readInt()
annotation.value()
node.getFirstChild()
new StringBuilder("(")
(Map.Entry)iter.next()
FileSystem.get(conf)
new GridData(GridData.FILL_HORIZONTAL)
out.getPos()
getClass().getName()
getClient()
SettableFuture.create()
entries.next()
new JobConf(conf)
attr.getValue()
System.getProperty("os.name")
new ArrayList<QName>()
a
b
new HashMap<String,Double>()
System.getProperty("java.class.path")
context.getPath()
new Configuration(conf)
pop()
keys.next()
node.getLocalName()
(byte[])value
element
getBounds()
source
input.readShort()
rs.getLong(1)
className
new HashSet<Object>()
connection.getMetaData()
new Query()
getId()
newArrayList()
new HashSet<URL>()
16
24
input.read()
NetworkInterface.getNetworkInterfaces()
60
new CompletableFuture<>()
method.getExceptionTypes()
KeyStore.getInstance(KeyStore.getDefaultType())
new byte[2048]
BigDecimal.ZERO
new Label(composite,SWT.NONE)
XPathFactory.newInstance()
off + len
dis.readInt()
Records.newRecord(ContainerLaunchContext.class)
line.indexOf(' ')
new char[2]
attributes.item(i)
uri.toString()
args.length
new PageParameters()
new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
attributes.getLength()
e.value
bean.getClass()
line.split(" ")
available()
e.getTargetException()
new ReentrantReadWriteLock()
coll.iterator()
property.getValue()
in.read(b,off,len)
input.readUTF()
in.readObject()
din.readInt()
new int[n]
new File(file)
context
new ArrayList<Artifact>()
classLoader
new String[list.size()]
new LinkedHashSet()
packed.charAt(i++)
node.getNodeName()
bb.getInt()
(Attr)attributes.item(i)
new Object[size]
clock.getTime()
clazz.getDeclaredFields()
seed
element.getLocalName()
entry.getValue().toString()
JsonNodeFactory.instance.objectNode()
new Subject()
iprot.readMapBegin()
attribute.getName()
new Object()
pos.getIndex()
other_element_value
first.length
"null"
split.getPath()
entity
directory.listFiles()
(long)uptime
new ArrayList(1)
input
-1.0
message.getHeaders()
value.getBytes()
new BytesWritable()
url.toExternalForm()
new ArrayList<String>(1)
now()
new User()
methods[i].getParameterTypes()
getLength()
new BufferedReader(new InputStreamReader(is))
files[i]
other_element_key
methods[i]
resources.nextElement()
e.next
stream.read()
fields[i]
(TypeVariable<?>)type
getModelObject()
tokens.get(i)
idx
new JPanel(new FlowLayout())
new TreeMap<String,Object>()
System.getProperty("line.separator")
getContent()
props.getProperty(key)
annotation.annotationType()
new JLabel()
readString()
new BasicCredentialsProvider()
value.split(",")
heap[1]
new BooleanQuery()
children.get(i)
input.readLong()
getContainer()
pt.getActualTypeArguments()
m.group(3)
entries[i]
qname.indexOf(':')
new Date().getTime()
rs.getString(3)
rs.getString(4)
KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm())
token.nextToken()
new double[3]
parent.getChildNodes()
src
new StringBuilder(32)
entry.getKey().toString()
Runtime.getRuntime().availableProcessors()
buf.position()
Maps.newTreeMap()
new Property()
getServletContext()
j.next()
bos.toByteArray()
tokens[0]
c.getName()
dir.list()
getTable()
name.lastIndexOf(".")
left
object
l
t
v
x
startIndex
new IntWritable()
new Range()
cls
new ArrayList<Double>()
System.getProperty("user.home")
(org.apache.thrift.protocol.TTupleProtocol)prot
new BooleanQuery.Builder()
getCause()
ref.getName()
buffer.get()
values.size()
conf.get(key)
ManagementFactory.getPlatformMBeanServer()
dataIn.readInt()
new ArrayList<>(4)
me.getKey()
System.getProperty("java.home")
fInputStream.read()
LinkedListMultimap.create()
request.getRequestURL().toString()
this.read()
jarFile.entries()
new Counters()
in.readUnsignedByte()
InetAddress.getLocalHost()
new StringBuilder(80)
new ArrayList<Class>()
new HashSet<Node>()
instance.getClass()
super.getMessage()
key.toString()
e.getException()
getString()
new GeneralPath()
Runtime.getRuntime()
value.toString().trim()
headers.get(name)
(Class<?>)type
s.readInt()
minSegment.getPosition()
itor.next()
"/"
parser.next()
-2
(String[])value
new JButton()
(IStructuredSelection)selection
new Path(uri)
buffer[offset++]
height
AccessController.getContext()
new String[count]
0l
new LinkedHashSet<Class<?>>()
32
new Match()
Executors.newSingleThreadExecutor()
scanner.next()
map.size()
right.evaluate(message)
root.getChildNodes()
attrs.getValue(i)
new InputSource()
new ObjectOutputStream(baos)
in.read(buf)
principal.getName()
reader.getElementText()
peekChar()
request.getParameterNames()
writer.toString()
new HashSet<URI>()
(List)value
exception
buf.length()
new int[bands]
connection.getInputStream()
new ProxyFactory()
new Column()
new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRUCT,iprot.readI32())
fileStatus.getPath()
name.toString()
cal.getTime()
(Boolean)right.evaluate(message)
attr.getNodeName()
new ArrayList<Exception>()
fs.open(path)
conn.createStatement()
reader.getName()
beanManager.createCreationalContext(bean)
dataInput.readUTF()
new String[args.length - 1]
value.trim()
like.charAt(i)
new ArrayList<AnnotationFS>()
in.readShort()
new char[4]
left.evaluate(message)
new DirectoryScanner()
new TreeMap()
toolkit.createComposite(parent)
input.readString()
factor
new String[4]
container
readShort()
request.getRemoteAddr()
new JPopupMenu()
new Table()
names[i]
r.readLine()
new CRC32()
(String)itr.next()
ModelFactory.createDefaultModel()
new ParsePosition(0)
in.readUnsignedShort()
en.nextElement()
builder.newDocument()
new HttpHeaders()
ex
new ArrayList<Field>()
hi
iterator.previous()
line.split("\t")
t.getObject()
new AtomicLong(0)
SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI)
new Composite(composite,SWT.NONE)
{0,0}
new String[types.length]
EMPTY
new HashSet<Annotation>()
connection
new ArrayList<FileStatus>()
getProperties()
new byte[bufferSize]
(HttpServletRequest)servletRequest
iprot.readSetBegin()
atts.getLength()
(String)args.get(0)
"false"
getEntityManager()
4 * kvend
val.toString()
Float.MAX_VALUE
fs.open(file)
new StringBuffer("")
reader.getPosition()
process.waitFor()
ClassLoader.getSystemClassLoader()
entries.iterator()
node.getName()
(Element)n
new IntWritable(0)
new ByteArrayInputStream(data)
new LinkedBlockingQueue<>()
response.getStatusLine().getStatusCode()
buffer.readByte()
line.trim()
values.iterator()
request.getHeaderNames()
input.readByte()
defaultValue
new FileInputStream(f)
resource.getName()
inputStream.read()
message.getContent()
new long[validBlocks.size()]
request
parts[2]
(URL)e.nextElement()
new ArrayList<Schema>()
memDiskSegments.size()
new TreeMap<>(String.CASE_INSENSITIVE_ORDER)
new Commandline()
name.getNamespaceURI()
bundle.getBundleContext()
fCurrentEntity.ch[fCurrentEntity.position]
new ServletMapping()
new int[count]
new Label(group,SWT.NONE)
sb.length()
position
new Project()
target.getClass()
name.charAt(i)
new HashMap<String,ByteBuffer>()
FacesContext.getCurrentInstance()
service.getName()
parameters.get(name)
(WildcardType)type
new Group(composite,SWT.NONE)
newHashMap()
new ArrayList<IProject>()
(GenericArrayType)type
uri.getHost()
StringUtils.EMPTY
method.getDeclaringClass()
bb.remaining()
new ArrayList<Bundle>()
attributes.getValue("name")
super.toString()
line.split("\\s+")
new ArrayList<Endpoint>()
new Schema()
new GridData(GridData.FILL_BOTH)
getWidth()
service.getContainer()
new byte[32]
operation.getName()
(Element)childNode
new Node()
prefix.length()
new URL(url)
this.offset
fBuffer[curPos++] & 0xff
(Collection<?>)value
new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32())
new HashMap<String,LocalResource>()
results.getLong(1)
a.length
authentication.getName()
enumeration.nextElement()
UIMAFramework.newDefaultResourceManager()
new CommandLineUtils.StringStreamConsumer()
name.getLocalPart()
target
p.getFileSystem(conf)
reader.getEventType()
selection.getFirstElement()
fInputStream.read() & 0xff
new Response()
new ArrayList<Map<String,String>>()
name.indexOf('/')
new DOMSource(doc)
new byte[3]
end - 1
types[i]
string.length()
getFirstChild()
new IOException()
selection.iterator()
request.getMethod()
new ArrayList<Column>()
parameterizedType.getActualTypeArguments()
index == fOffset ? fInputStream.read() : fBuffer[index++] & 0x00FF
event.getServletContext()
handler
str
path.split("/")
(ParameterizedType)genericType
new ArrayList<IClasspathEntry>()
segment.getPosition()
new AffineTransform()
getConfiguration()
pd.getName()
ent.getValue()
BigInteger.ZERO
bufindex
url.getPath()
Object.class
file.length()
key.ordinal()
9
result
new HashSet<File>()
get(index)
h
getData()
p
currentUrl.getFile()
n.getTextAttribute("scope")
new IdentityHashMap<Node,NodeInfo>()
getBytes()
children.get(0)
triple.getObject()
is.readShort()
factory.create()
connection.getResponseCode()
getDimension()
currentPos
values[0]
input.charAt(i)
ByteBuffer.wrap(bytes)
values.next()
ResourcesPlugin.getWorkspace().getRoot()
resource.getFullPath().toString()
newHashSet()
new HashMap<String,Map<String,String>>()
arguments[i]
this.chardata
queue.remove(0)
new SmapGenerator()
new Object[4]
nmtoken.charAt(i)
data.readUnsignedShort()
context.getService(reference)
200
new HashSet<Path>()
crc
pageInfo.getTaglib(uri)
attrs.item(i)
new YarnConfiguration()
ent.getKey()
state
InetAddress.getByName(hostname)
byteBuffer.getInt()
node.getTextContent()
src.getSampleModel()
argument(i)
node.jjtGetNumChildren()
new LinkedMultiValueMap<String,String>()
value.getString()
new Message()
getHeight()
new DefaultArtifactCoordinate()
kv.getValue()
bundleContext.getBundles()
request.getParameterMap()
Calendar.getInstance(locale)
n.getJspAttributes()
request.getCookies()
getParameters()
getDialogSettings()
taskAttemptContext.getConfiguration()
reader.getAttributeCount()
this.parseRegex()
new HashMap<Class<? extends Exception>,RetryPolicy>()
doc.getRoot()
stack
Token.createRange()
e.getAttributes()
new LinkedList<NodeInfo>()
message.getPayload()
readByte()
server.getGlobalNamingResources()
subject.getPrincipals()
new DescriptiveStatistics()
Lists.newArrayListWithCapacity(1)
ctxt.getParentContext()
context.createMetadata(MutableCollectionMetadata.class)
reader.getAttributeLocalName(i)
event.getClass()
factory.newSAXParser()
new StringBuilder("SELECT ")
(String)enumeration.nextElement()
_arguments.size()
n.getInnerClassName()
conn.getMetaData()
getText()
(Object[])value
entrySet().iterator()
(HttpURLConnection)url.openConnection()
context.getRealPath("/")
0.5f
max
(ASTNode)node.getChild(i)
node.getNamespaceURI()
path.lastIndexOf('.')
ite.getTargetException()
"1"
this.type == Token.RANGE ? Token.createRange() : Token.createNRange()
len_t[i] & 0xff
op.getData()
new int[]{0,0}
args.get(i)
getFont()
line.split(",")
operationInfos[i]
buffer.duplicate()
properties.get(propertyName)
host.getName()
normalize(path)
new Label(container,SWT.NONE)
min
input.readUnsignedShort()
new ArrayList<Entity>()
new Scan()
64
parameterTypes[i]
request.getCharacterEncoding()
response.getStatus()
type.getInterfaces()
urls.nextElement()
(ReplicatedMapEntry)entry.getValue()
className.length()
bb.get()
this.getClass().getClassLoader()
paramTypes.length
(List)entry.getValue()
path.lastIndexOf("/")
indexOf(o)
new ArrayList<Document>()
"?"
command.getValue()
tagVarInfos[i].getNameGiven()
mb.getEnd()
this.regex.charAt(this.offset)
new Variance()
new LongWritable()
new ArrayList<URI>()
ctxt.getServletJavaFileName()
HashBasedTable.create()
dbf.newDocumentBuilder()
getClassName()
e.getSource()
new DataOutputStream(baos)
new TableRow()
PlatformUI.getWorkbench().getActiveWorkbenchWindow()
new int[numBands]
list.item(i)
ois.readObject()
next.getValue()
DOMUtils.newDocument()
new StandardContext()
getSession()
System.getProperty(factoryId)
Integer.parseInt(id)
rs.next()
pageInfo.getDoctypeSystem()
super.visitMethod(access,name,desc,signature,exceptions)
new byte[in.readInt()]
line.length()
new TreeSet<Integer>()
request.getContentType()
NumberFormat.getInstance()
new File(uriRoot)
text.charAt(i)
10000
UIMAFramework.getXMLParser()
file.toURI().toURL()
getKeys()
pt.getActualTypeArguments()[0]
fields.get(i)
getResourcesMap(uri)
new JPanel(new FlowLayout(FlowLayout.CENTER))
type.getComponentType()
Records.newRecord(Priority.class)
src.getWidth()
Long.parseLong(value)
count - pos
uri.getAuthority()
reader.getText(start,stop)
t.getMessage()
new TableStats()
result.get(0)
event.getValue()
bean.getEjbName()
new StringBuilder(length)
fileStatus.getPath().getName()
buffer.limit()
new ArrayList<IFile>()
(Set)entry.getValue()
value.getStringValue()
new ByteArrayOutputStream(4096)
IOUtils.toByteArray(is)
(Entry)o
param.split("=")
p_uriSpec.length()
new ArrayList<Properties>()
property.getType()
MutableMap.of()
MessageBytes.newInstance()
ByteString.newOutput()
getInternalState()
BeanDefinitionBuilder.genericBeanDefinition()
cb.get()
header.getName()
currentThread.getContextClassLoader()
new HashMap<Integer,Integer>()
new AttributeList()
readContents(url)
ch
SSLContext.getInstance("TLS")
msg.getBody()
loadProperties(url)
attrs.getQName(i)
argv[1]
info.getPropertyDescriptors()
new ArrayList<>(100)
chunk.getLength()
args.get(1)
new ArrayList<Edit<?>>()
new int[MAX_ALPHA_SIZE * 2]
cal.getTimeInMillis()
(DefaultMutableTreeNode)path.getLastPathComponent()
properties[i]
new GridBagLayout()
new Composite(parent,SWT.NULL)
input.get(i)
new ManagedList()
params.get(0)
img.getWidth()
in
((Map.Entry)entry).getValue()
new ArrayList<>(source.size())
fileChooser.getSelectedFile()
new long[newCapacity]
lo
new byte[blockSize]
BigDecimal.ONE
Double.doubleToLongBits(value)
new float[2]
getParentNode()
new ArrayList<Row>()
new ArrayList<String[]>()
head
line.getArgList()
op
clock.currentTimeMillis()
prop.getName()
new String[arraySize]
fs.open(p)
conf.iterator()
(Map)value
new ArrayList<Number>()
"N/A"
(Map.Entry)itr.next()
getTransform()
readU2()
n.getFirstChild()
pageInfo.getOmitXmlDecl()
cursor.getPos()
x2
line.trim().split("\\s+")
new StopWatch()
index + 1
pageInfo.getURI(prefix)
current()
new LinkedHashSet<Artifact>()
document.getRootElement()
new ArrayList<Handler>()
attributes.get("type")
new ArrayList<Job>()
getLocale()
new Servlet()
new Label(composite,SWT.WRAP)
new ManagedList<>()
thread.getContextClassLoader()
file.readInt()
Token.createUnion()
line
getWrapperChild(outPart,wsdlMessagePartName)
Utils.readVInt(in)
new ModifiableSolrParams()
new File(docBase)
state.get()
getService()
(String)args.get(1)
tagInfo.getTagClassName()
collection.iterator()
config.getServletContext()
ois.readInt()
tokens[1]
component
buff
new ArrayList<Entry>()
dialog.getResult()
minVal
td.getName()
attrs.getValue("uri")
property.toString()
new Label(parent,SWT.NONE)
child
new ArrayList<>(count)
reader.mark()
System.getProperty(key)
new AtomicBoolean(true)
new HashSet<Permission>()
webBeansContext.getBeanManagerImpl()
getAttribute(i)
Character.toUpperCase((char)ch)
subelements.getNode(i)
model.getObject()
names.nextElement()
n.getBody()
bytesInThisBlock
method.getGenericParameterTypes()
new BufferedReader(new InputStreamReader(System.in))
5000
bb.position()
schema.getTargetNamespace()
new Entry()
args[4]
literal.length()
this.iterator()
name.split("\\.")
head.next
fileName
n.getTextAttribute("class")
Integer.parseInt(matcher.group(1))
this.nMTF
getMembers()
new Sum()
MutableSet.of()
table.length
t.nextToken()
getUsername()
md.digest()
request.getServerName()
new File(directory)
new DataInputByteBuffer()
new HashSet<QName>()
n.getNamedAttributeNodes()
Spring.constant(0)
results.next()
String.valueOf(value)
name.toCharArray()
new FileSet()
new StringBuilder(name)
new XMLOutputter()
buffer.readInt()
schema.getName()
this.in.read()
readString(in)
readU1()
(Element)child
new TreeSet<>(String.CASE_INSENSITIVE_ORDER)
properties.getProperty(property)
qname.lastIndexOf(':')
Integer.parseInt(s)
values
(ObjectType)intType
Toolkit.getDefaultToolkit().getScreenSize()
new Mean()
context.createMetadata(MutableBeanMetadata.class)
src.getColorModel()
iterator.next().getValue()
buffer.readRecord()
descriptor.getName()
mapper.createArrayNode()
new Timer()
new LinkedMultiValueMap<>()
bundle.getRegisteredServices()
iter.nextNode()
pageInfo.getDoctypePublic()
new SparkConf()
dis.readLong()
getProject()
Float.POSITIVE_INFINITY
new Semaphore(0)
new ArrayList<Message>()
Thread.currentThread().getStackTrace()
new UpdateRequest()
getRoot()
project.getDescription()
new Properties(System.getProperties())
new SerializationFactory(conf)
notification.getValue()
Collections.EMPTY_LIST
tokens.next()
getEntry(key)
reader.getNamespaceCount()
ref.getAll()
uri.getPort()
n.getTagVariableInfos()
extractOption()
new ArrayList<Resource>()
in.readFloat()
new MessageImpl()
node.getNextSibling()
nextChar()
prefix
f.getType()
component.getParent()
new HashMap<String,String[]>()
t.get(0)
configuration.getProperties()
new double[dimension]
new DirectChannel()
System.getProperty("path.separator")
Calendar.getInstance(getTimeZone())
ByteBuffer.allocate(8)
n.getTextAttribute("var")
builder.getDocumentElement()
(Boolean)TypeConversionSupport.convert(value,Boolean.class)
new ArrayList<Expression>()
ctxt.getTemporaryVariableName()
new String[length]
new Workflow()
getInt()
n.getTextAttribute("varReader")
pageInfo.getDoctypeName()
this.getChild(i).getMaxLength()
new PropertiesConfiguration()
{null}
map.remove(key)
(Element)nl.item(i)
reader.getNamespaceURI()
parent.getFirstChild()
element.getNamespaceURI()
Integer.parseInt(st.nextToken())
(String)names.next()
wsdlFactory.newWSDLReader()
getGcTimes()
s.readObject()
children.getLength()
this.parseCharacterClass(false)
new Job(conf)
o.getClass()
parent.getBody()
table.getSelectedRow()
1.0d
getMessage()
deserializer.deserialize(null)
(SavedRequest)session.getNote(Constants.FORM_REQUEST_NOTE)
readUnsignedByte()
new LinkedList<Object>()
dataIn.readLong()
statement.executeQuery()
Calendar.getInstance(TimeZone.getTimeZone("UTC"))
super.get(key)
Long.valueOf(0)
getMapMembers()
definition.createMessage()
buffer
t.getStackTrace()
status.getPath()
new XmlOptions()
new long[size]
obj.toString()
Integer.parseInt(value)
atts.getURI(i)
new File(args[1])
new TableWrapLayout()
0x00
(Class)iterator.next()
in.available()
create()
a[i]
path + uri
attr.getNodeValue()
socket.getSoTimeout()
pair.getValue()
record.getThrown()
l.iterator()
new Path(project)
new File(uri)
(int)value
new DavPropertyNameSet()
name.substring(0,pos)
node.getPath()
m.group(5)
new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING,iprot.readI32())
new JToolBar()
getContextClassLoader()
Uri.parse(url)
clazz.getConstructor().newInstance()
image.getColorModel()
getWriter()
HashBiMap.create()
element.getValue()
reader.nextChar()
new double[size]
schema
properties.get(key)
(int)x
inputs.get(i)
seed & 0x00000000FFFFFFFFL
runningOrder[i]
new JPanel(new FlowLayout(FlowLayout.LEFT))
new InputStreamReader(is)
(attrs == null) ? 0 : attrs.getLength()
cf.createIntConstraint()
name.lastIndexOf(':')
event.getException()
src.getHeight()
uri.substring(idx1 + 1)
pageInfo.getContentType()
this.get(key)
getClass()
new StringBuffer(100)
new Filter()
Locale.getDefault()
element.getAttribute("id")
q.getResultList()
begin
m.getDeclaringClass()
new StringBuilder("[")
genPos
new Point()
methods.iterator()
new LinkedList<URL>()
new UserGroupInformation(subject)
HashMultiset.create()
new Rectangle2D.Double()
tagInfo.getAttributes()
new StringBuffer(s)
Lists.newArrayListWithExpectedSize(children.size())
n.getStart()
FC_CONTINUE
buf[count++]
InetAddress.getLocalHost().getHostName()
new HashMap(methods.length)
(ASTNode)ast.getChild(i)
fs.getType()
Policy.getPolicy()
new Class[1]
job.getJar()
get(i)
qname.getLocalPart()
query
cursor.next()
new FileWriter(file)
attributes.getQName(i)
stmt.executeQuery()
_fname.getLocalPart()
new java.util.ArrayList()
Box.createHorizontalBox()
component.getName()
new HashMap<>(3)
exchange.getInMessage()
getPath()
name.getBuffer()
new SAXBuilder()
new HashMap<>(2)
new JScrollPane()
new HashSet<Type>()
file.list()
name.getPrefix()
qname.getNamespaceURI()
new JPanel(new FlowLayout(FlowLayout.RIGHT))
new HashMap<>(4)
set.iterator()
me.getValue()
elements.get(i)
new ArrayList<FileSystem.Statistics>()
new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32())
new ByteArrayInputStream(bos.toByteArray())
o.toString()
new String(data,UTF_8)
s.iterator()
cls.getSuperclass()
bundleContext.getService(ref)
(List<?>)value
start + length
child.getChildNodes()
facesContext.getExternalContext().getRequestParameterMap()
new ArrayList<Integer[]>()
clazz.getAnnotation(DataBinding.class)
new File(jarLocation)
new HashMap<String,Map<String,Object>>()
events.iterator()
op1.getInputs().get(0)
Integer.valueOf(elementReader.getElementAsString())
(Integer)iter.next()
to - from
epoch % 60
new RouterValve()
new ArrayList<TaskAttemptID>()
reader.getCurrentValue()
(List<MSentryGroup>)query.execute()
getStreamName(path)
(HttpServletRequest)pageContext.getRequest()
new ArrayList<Pair<LogicalVariable,Mutable<ILogicalExpression>>>()
new ArrayList<byte[]>()
item.getId()
values.length
(char)reader.peekChar()
m
value.longValue()
(int)checksum.getValue()
o
pTree.getCumulativeRssmem()
module.getClassLoader()
super.equals(other)
((IStructuredSelection)selection).getFirstElement()
event.getSelection()
new ArrayList<ElementInfo>()
cookie.getValue()
unassignedTaskForEachVolume.get(volumeId)
new Content()
(Class<V>)job.getMapOutputValueClass()
Machines.findUniqueMachineLocation(entity.getLocations(),SshMachineLocation.class)
new BasicAttributes(true)
new SolrQuery()
ParameterizedType.class.cast(type)
ex.getException()
(ConstantInteger)cpool.getConstant(getIndex(),Const.CONSTANT_Integer)
msg.getSession()
new File(".").getAbsoluteFile()
in.remaining()
new Entry[newCapacity]
getPassword(username)
input.getAsJsonArray()
entry1.getValue()
table.getColumnModel()
context.getJobConf()
feed.getEntries()
console.newOutputStream()
new VerticalPanel()
token.decodeIdentifier()
ThreadContext.getThreadContext()
new byte[count]
infoSocAddr.getPort()
makeAbsolute(normalizeURI(entry.getEntryArg(1)))
getArguments()
new StringBuilder(String.valueOf(status.getModificationTime()))
elem.getAttributeNodeNS(URI,SRC_ATTR)
tasksWithTagLiveOrNull(tag)
exchange.getError()
new ArrayList<Mutation>()
fields.get(fieldName)
dataType.getGenericType()
cmdline.getOptionValue("l")
new URL(contribution.getLocation())
getLock(Type.WRITE,Scope.EXCLUSIVE)
(short[])o
getAttributeCount()
Long.parseLong(parts[6])
constructBean()
new StringTokenizer(pathInfo,"/")
servletContext.getRealPath("/")
new ConfigurationFactory()
message.getContent(XMLStreamReader.class)
super.getSplits(new Job(job))
position.getIndex()
Integer.parseInt(String.valueOf(c))
file.toURI().toURL().toExternalForm()
this.toString()
path.getLastPathComponent()
Paths.get(args[0])
top
ConfigBag.newInstance()
feature.getName()
getCurrentTransaction()
new AppInfo()
(AbstractLogicalOperator)op.getInputs().get(0).getValue()
properties.propertyNames()
extensionPoints.getExtensionPoint(UtilityExtensionPoint.class)
brooklyn().getEntity(application,entity)
URLs.toFile(url)
new File(destDir,entry.getName())
records.size()
new HashMap<String,AccessControlList>()
entities.iterator()
text.getText()
tSentryPrivilege.getURI()
outputSet.getDirectories()
new FileOperation()
message.getExchange()
WritableUtils.readVInt(inStream)
_values.length
connection.getAutoCommit()
new ClassFinder(ejbClass)
src.getRGB(x,y)
getSchema()
getHead()
startTime + timeout
{-1,-1}
new Throwable()
LogMetadata.getLogStreamPath(uri,logName)
reader.getAttributeValue(null,name)
new SpillRecord(partitions)
path.getFileName().toString()
getMaxTotal()
encoded.toCharArray()
el.getLocalName()
(ColumnReferenceExpr)expr
getLongNameData()
sessions.get(sessionId)
contextInfo.standardContext
r.readInt()
values[2]
new Point(x,y)
ch.length
attributes.get(name)
method.getAnnotation(annotationClass)
(InputReadErrorEvent)tezEvent.getEvent()
contextDocument.createDocumentFragment()
(SimpleCredentials)credentials
new HashMap<Class<?>,HandlerMethod>()
values[1]
"true"
SystemInstance.get().getComponent(WebAppBuilder.class)
field.get(null)
cls.getInterfaces()
v.getString()
new HorizontalPanel()
column.getMaxLength()
context.reader()
new PrintWriter(writer)
parsePositiveInt(elements,i++,s)
el.getAttributes()
is.available()
Integer.parseInt(args[2])
map.get(bpid)
parsedDN.getCN()
(SocketChannel)key.channel()
x2 - x1
ctx
new Vector<Object>()
readSubBlock(is)
javaInterfaceFactory.createJavaInterfaceContract()
e.getNamespaceURI()
existIterator.next()
60000
jmsBinding.getResponseConnectionFactoryName()
System.currentTimeMillis() - beginTime
new ArrayList<AnalysisEnginePerformanceMetrics>()
connector.getResourceAdapter().getAdminObject()
(log >= prec ? 0 : prec - log - 1)
255
interceptorData.getInterceptorClass()
256
parser.getLocalName()
source.getOutputStream()
getDirectories()
new Composite(page,SWT.NONE)
(GridBagConstraints)gbcLabel.clone()
System.getProperty("user.name")
elements[i]
getNextBackupIndex()
op.getOutputType()
schema.getColumn(i)
new TiffReader(isStrict(params))
loader.iterator()
AffineTransform.getTranslateInstance(x,y)
props.propertyNames()
new TreeColumn(tree,SWT.LEFT)
ranges.get(i)
reader.getNamespaceContext().getNamespaceURI(prefix)
new ClassPath()
(UnaryNode)node
elvis(cf.value(),f.getName())
0xff & imageData[bytecount + 0]
getComponent()
desc.getPartitionMethod()
interceptors
Strings.toString(((Map.Entry)entry).getKey())
target.position()
new JobConf()
new ArrayList<Token>()
LogicalPlan.createNodeWithoutPID(SortNode.class)
new ArrayList<HashMap<String,Object>>()
new ArrayList<Filter>()
compositeService.getPromotedService()
e.getValue().intValue()
schema.getElementType()
new XStream(new DomDriver())
child.getInputStats()
jmsBinding.getResponseActivationSpecName()
new ArrayList<>(children.size())
new ArrayList<>(5)
ctx.getFunctionMapper()
rs.getInt(1)
new ContextResourceEnvRef()
bundle.getSymbolicName()
s.charAt(0)
new char[n]
URI.create(suri)
new CorbanameURL(uri)
new RetryTemplate()
new ConfigBag()
job.getConfiguration().getInt(MRJobConfig.NUM_MAPS,1)
new ContributionWriteException(e)
(RelationList)expr
createValueAggregatorJob(args)
digest.digest()
lastRet
bufferLength - bufferPosition
(EJBMetaDataImpl)result
new String[v.size()]
element.getSchemaTypeName()
rs.getLong(2)
table.getScanner(scan)
new LinkedList<Path>()
segments.size()
item.getValue()
input.readUnsignedByte()
pendingTasks.size()
new SequenceSet()
callContext.getTransactionPolicy()
(DataBag)input.get(0)
(EntityBean)b
FileSystem.getDefaultUri(conf)
n.getNextSibling()
URI.create(endpointURL).getPath()
new StyleRange()
new HashMap<String,byte[]>()
keys.size()
new int[numbers.length]
findSessions()
line.get("SORT_FINISHED")
new Provider()
System.nanoTime() - start
tovisit.pop()
getClip()
jndiEncBuilder.build(JndiEncBuilder.JndiScope.comp)
new JTextField()
completePath
new HashMap<String,Class>()
buf[pos++] & 0xFF
-Double.MAX_VALUE
container.getBeanContexts()
localDelegate.elements()
tmp.getValue()
"-1"
TupleFactory.getInstance().newTuple()
clientIdentity.get()
SystemInstance.get().getComponent(TransactionSynchronizationRegistry.class)
context.getJmsMsg()
new Column[joinKeys.size()]
BrooklynAccessUtils.getBrooklynAccessibleAddress(this,port)
input.getValue()
ConfigBag.newInstanceCopying(setup)
element.getKey()
getURIString(reader,LOCATION)
builder.getBeanDefinition()
endTime - System.currentTimeMillis()
(Multipart)content
ejbDeployment.getResourceLink("openejb/destination")
maxValue - days
this.get()
openejbJar.addEjbDeployment(bean)
LinkedHashMultimap.create()
_index
timezone
soi.getAllStructFieldRefs()
job.waitForCompletion(true)
new HashSet<TSentryPrivilege>()
Security.getProviders()
exchange.getOutMessage()
new ArrayList<DatanodeDescriptor>()
beanContext.getKeyGenerator()
this.children[0].getValue(ctx)
new ArrayList<Runnable>()
event.getNewValue()
readHeader(is)
javaProject.getRawClasspath()
mail_cap.substring(start,index)
new TSentryPrivilege()
counter.incrementAndGet()
"PageContext.PAGE_SCOPE"
scanner.getInputStats()
(NameCallback)callbacks[i]
getMaxReachedNotificationDelay().toMilliseconds()
(ArrayType)type
timer.getDurationRemaining()
getExchangeFactory().createInOnlyExchange()
clientModule.getApplicationClient()
new TSentryPrivilege(privilege)
value.iterator()
assemblyFactory.createService()
(MessageDrivenBean)bean
itsp.next()
wsBinding.getBindingInterfaceContract()
filename.length()
SystemInstance.get().getComponent(ContainerSystem.class)
getColumnCount()
new MapBindingSet()
(RPCParam)args.get(i)
jmsBinding.getConnectionFactoryName()
request.getSession()
contributionFactory.createArtifact()
getLocality(loggedTask,loggedAttempt)
new byte[DEFAULT_BUFFER_SIZE]
newTestInstance()
(int[])o
srcCM.getColorSpace()
currentNode.getNodeName()
term
totalMaps - remainingMaps
new CompletableFuture<BKLogSegmentWriter>()
componentService.getService()
new StringBuilder(create.getName())
jar.getManifest()
new ContainersInfo()
getConfig()
message.getDestination()
value.getType()
new StringBuffer(128)
(Collection)value
dir
new ArrayList<LogicalVariable>()
(Jdk13InvocationHandler)Proxy.getInvocationHandler(proxy)
new TListSentryPrivilegesResponse()
old.length
new ObjectFactory()
new IndexMetadata()
new ClassReference(className)
new ServletContextHandler(ServletContextHandler.SESSIONS)
socket.getOutputStream()
g.getColor()
inStream.read()
entry.getDn()
outputMessage.getPart(wsdlMessagePartName)
declaringClass
exchange.getMessage("in")
new ContributionReadException(e)
r.get()
map.get(tag.tag)
assemblyFactory.createComponentService()
new MethodInfo()
resourceAdapter.getOutboundResourceAdapter()
new byte[4 * 1024]
PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage()
new TreeMap<String,LocalResource>()
key.hashCode()
getAnnotationInfos(annotation.getName())
estimateSizeRecursive(context,rightLineage)
new byte[sasl.pending()]
context.getBundles()
schemaDoc.createElementNS(SCHEMA_NS,"xs:element")
(Map)o
st.countTokens()
assemblyFactory.createComponent()
manifest.getAttributes(dirName)
"*"
(String)env.get(Context.SECURITY_PRINCIPAL)
new MenuItem(menu,SWT.PUSH)
uriBC.getBytes()
in.readDouble()
new String(ch,start,length)
plan.getRoots()
new JLabel("Organisation Unit (OU)")
new AsReq()
entry.getId()
cmd.getOptionValue("o")
(AggregateOperator)op
new ProgressBuilder()
new JLabel("Organisation (O)")
new ResourceSchema()
Paths.get(args[1])
p_nStartIndex
new String[files.length]
pair.getFirst()
new CompressionCodecFactory(conf)
v.get()
GetClassLoader.fromContext()
ejbModule.getValidation()
new CompletableFuture<Versioned<List<LogSegmentMetadata>>>()
new ArrayList<ServiceEndpoint>()
new PrintWriter(sw)
field
"-"
element.getAttribute(attributeName)
(Binary)value
status
SecurityContextHolder.getContext()
new Method(name,desc)
(AbstractLogicalOperator)opRef.getValue()
BagFactory.getInstance().newDefaultBag()
v.length()
new String[contributions.length]
in.getPosition()
(String)name
new HashMap<Long,Long>()
map
pair.getKey()
table.getColumns()
HttpUserGroupInformation.get()
new LinkedList<Long>()
meta.readInt()
new DatagramPacket(new byte[2048],2048)
(HttpsURLConnection)conn
getMetadata(name)
new LongPair()
Thread.interrupted()
new ArrayList<>(l)
new TypedBytesWritable()
converter.getClass()
features.get(i)
heldContainers.get(container.getId())
event.getTarget()
getInternalNodeState()
configFactory.getResourceIds("DataSource",required)
queue.take()
def.getTypes()
toString()
dataarray[i++]
new MethodPermissionInfo()
new StringBuilder(10000)
parser.getAttributeValue(i)
dst
epr.getChildNodes()
properties.getProperty(keyParam)
new RandomAccessFile(file,"r")
this.root
newLinkedHashSet()
inputStream.readInt()
getRequestorGroups(subject)
startTimes.get(attemptID)
new ArrayList<Category>()
new ConcurrentLinkedQueue<>()
new StringBuffer(fvalue)
dataInputStream.readUnsignedShort()
buildInputExecutor(masterPlan.getLogicalPlan(),channel)
new BytesRef()
replicaInfo.getGenerationStamp()
getMasterNode()
new EJBMetaDataImpl()
new WebMarkupContainer(id)
new Path(args[0])
socket.getLocalAddress()
new Counter(counter.getDepth() + 1)
annotation.getCoveredText()
ejbModule.getClassLoader().loadClass(bean.getEjbClass())
new HashSet<>(2)
se.getCause()
ex.getCause()
mdb.getActivationConfig().getActivationConfigProperty()
bc.getBuffer()
UserGroupInformation.createRemoteUser(user)
className.lastIndexOf(".")
filename
new HierarcyBuilder()
tezEvent.getSourceInfo()
((XMLType)faultType.getLogical()).getElementName()
array.get(i)
1L
schemaName + "." + tableName
25
source.read()
ClientTraceLog.isInfoEnabled() ? System.nanoTime() : 0
super.addingService(reference)
new ArrayList<Intent>()
new Date(System.currentTimeMillis())
refAddr.getContent().toString()
30
bos.size()
plan.getBlock(node.getLeftChild())
line.toString()
isViableSeed(member)
elements()
new NamespaceMap()
new ChangeSet()
logger.isDebugEnabled()
context.queryBlock.getNodeFromExpr(expr)
table[i]
tokenizer.countTokens()
(String)line.getArgList().get(0)
(List<URL>)appModule.getAltDDs().get("persistence-fragment.xml")
info.getDestination()
properties.getProperty("locale")
thisValue.subtract(prevValue)
dict.keys()
loginContext.getSubject()
(String)j.next()
new File(pathname)
(JSONObject)o
assemblyFactory.createComponentReference()
buffer.getLong()
new CompletableFuture<String>()
jgen.getOutputContext()
readFacesValidator(elementReader,context)
72
config().get(MEMBER_SPEC)
URLs.uri(webModule.getModuleId())
getMetaFile()
currentToken
v.iterator()
getListener()
new byte[256]
supplier.create()
readTaglib(elementReader,context)
("1".equals(attribute.getValue()) || "true".equals(attribute.getValue()))
cal.get(Calendar.DAY_OF_MONTH)
new TreePath(loc,eltname)
getEntity()
stringBuilder.toString()
attributes.iterator()
new byte[128]
val
pattern.charAt(i)
new Object[length]
new TimelineEvent()
wsdlFactory.createWSDLInterfaceContract()
ThreadContext.enter(callContext)
PrivilegeBits.getInstance()
xsdFactory.createXSDefinition()
new ArrayList<Version>()
new TreeSet<Long>()
new ArrayList<DBModelAuthorizable>()
amRmClient.getTopPriority()
scanner.iterator()
atts.getLocalName(i)
new OrNode()
dis.readBoolean()
getRootFolderHistory()
(VertexEventTaskCompleted)event
WritableUtils.readVLong(in)
(Map<String,Object>)value
dataIn.readUTF()
request.getAttributeNames()
e.getChildNodes()
new BufferedReader(new InputStreamReader(is,"UTF-8"))
nodes.getLength()
element.getAttribute("kafka-template")
new HashMap<String,Reference>()
(String)event.getData()
new TiffOutputSet(byteOrder)
new Path("/")
XMLInputFactory.newInstance()
msg
new ArrayList<Page>()
volumeMap.get(bpid,blockId)
resource.openStream()
getContents()
new InetSocketAddress(host,port)
fileConfig.getKeys()
new BatchWriterConfig()
port.getServiceImplBean()
connectionPool
JaxbJavaee.getContext(type)
new SimpleDateFormat("yyyy-MM-dd")
input.iterator()
visit(ctx,stack,expr.getChild())
JavaIntrospectionHelper.getBaseType(element.getType(),element.getGenericType())
new FilePair()
childElement.getQName().getLocalPart()
BrooklynLoaderTracker.getLoader()
openejbJar.getDeploymentsByEjbName()
HConstants.EMPTY_START_ROW
new ConfigMap()
(JavaInterface)service.getInterfaceContract().getCallbackInterface()
tiffImageData.getImageData()
(SessionId)o
getNumTestsPerEvictionRun()
(Long)t.get(0)
n.getVariableInfos()
config.get(key)
inputType.getLogical()
new File(module.getJarLocation())
directSendsToItemByLocation.get(item)
entity.getContent()
dais.readInt()
new FlowPanel()
tezEvent.getSourceInfo().getTaskAttemptID()
super.removeChild(child)
new ID(namespace,provider.getId())
new Composite(_parent,SWT.NONE)
d.getDataBinding()
new MavenXpp3Reader()
cParser.nextToken()
buffer.getLength()
resolver.getFilename()
socket.getInputStream()
new StringBuilder(method.getName())
new VBox()
request.getRequestorUserName()
new TListSentryPrivilegesForProviderResponse()
new Membership(local,AbsoluteOrder.comp,true)
graphics.getTransform()
getResourceName(request)
host.findChildren()
new boolean[]{false}
new ArrayList<Link>()
mb.getCharChunk()
getMaxPoolSize()
NOT_AVAILABLE
container.getId()
field.getTextContent()
slide.getNotes()
privEnt.getKey()
((ObjectMessage)msg).getObject()
new Class[interfaces.length]
this.table
Long.parseLong(parts[0])
contentType.indexOf("charset=")
JSON_NODE_FACTORY.objectNode()
readImage(byteSource)
new ArrayList<K>()
ctl.get()
docBase
img.createGraphics()
new Attributes()
SecurityUtils.getSubject()
new ArrayList<V>()
new StringBuffer(200)
new TopicExpressionType()
parameter.getParameterType()
getEonAndYear()
clazz.getAnnotation(MessageDriven.class)
data.readUnsignedInt()
new TldTaglib()
node.jjtGetChild(i)
new HashMap<String,Metric>()
pattern.length()
new LinkedHashMap<>(2)
new char[1]
entity.getLocations()
wsdlFactory.createWSDLDefinition()
j + 1
document.getLength()
spec.indexOf(':')
DelegatePermissionCollection.getPermissionCollection()
"N"
suspendsTransactionPreInvoke()
(XMLGregorianCalendar)TEST_POINTS[0].clone()
new ArrayList<Project>()
info.getName()
factory.createInOutExchange()
split.getLocations()
cas.createFeaturePath()
ctx.getProperties()
ex.get(BindingOperationInfo.class)
num.liveReplicas()
new File(url.toURI())
new String[children.length]
(UnaryNode)parent
input.read(buffer)
new MutableMap<String,Object>()
SystemInstance.get().getComponent(OpenEjbConfiguration.class)
new MethodTransactionInfo()
s[i]
TezID.readID(in)
fieldIterator.next()
System.getProperty("java.io.tmpdir")
replicaInfo.getMetaFile()
getConfig(CLASSPATH)
new StyleMapEntry()
element.getTagName()
getOptionalNode()
key.split("\\.")
createBNode()
getFilePointer()
getY()
stream.readFields()
method.methodParams
currentBuffer.nextPosition
webInfDir.listFiles()
new BooleanStream()
exifBytes.length
TomEEClassLoaderEnricher.class.getClassLoader()
new ByteChunk()
req.getAttributeNames()
getPathCount()
new JobConf(job)
((JarURLConnection)url.openConnection()).getJarFileURL()
Float.MIN_VALUE
requestPath.lastIndexOf('/')
ssiMediator.getConfigErrMsg()
PlatformUI.getWorkbench()
(Permission)e.nextElement()
(red + green + blue) / 3
getCache()
type.getPropertyMembers()
plan.getBlock(node.getRightChild())
data[off++]
exchange.getOperation()
inStream.readInt()
SSLContext.getInstance("SSL")
ResourcesPlugin.getWorkspace().getRoot().getProjects()
new ArrayList<UUID>()
SDOContextHelper.getHelperContext(operation)
sb.toString().trim()
new ServiceInfo()
conf.getClassByName(Text.readString(in))
new SuperProperties()
parameters[i]
getEndpoint()
Tasks.current()
new HashMap<String,Boolean>()
new JMSBinding()
currentOrNull()
appenderList.size()
new ResourceInfo()
EntityUtils.toString(entity)
BKDLConfig.resolveDLConfig(zkc,uri)
countNodes(block)
IO.read(url)
value.lastIndexOf(':')
elementReader.getElementAsQName()
entity.getAttribute(sensor)
edges.next()
new HashMap<String,T>()
list.get(1)
new ArrayList<ControlledJob>()
ejbModule.getOpenejbJar().getDeploymentsByEjbName()
Executors.newSingleThreadScheduledExecutor()
parser.parse(args)
row[i]
getConf()
SecuritySupport.getContextClassLoader()
(PDImageXObject)pdImage
(String)stack.pop()
JaxbWls.getContext(type)
TIFF_HEADER_SIZE
args.size()
readCountedLine()
request.getProperties()
element.getType()
getCapacity()
objectName.getKeyProperty("name")
ThreadMessageContext.getMessageContext()
findMethods(c)
new ArrayList<>(classes.size())
attributes.get(keys[i])
permission.getName()
stringWriter.toString()
context.getName()
reader.getAttributeValue(null,PROVIDES)
"jar"
child.getLocalName()
request.getSession(false)
fEnumerationSize
new Form<>("form")
spec.getType()
getCurrentElement()
new HashMap<Vertex,Set<String>>()
super.read(b,off,len)
new Group(parent,SWT.NONE)
(Class)in.readObject()
bagFactory.newDefaultBag()
parseUserAndHostAndPort(val)
objects[i]
source.getValidity()
jsonObject.get("type").getAsString()
e.getFirstChild()
readFacesOrderingOrdering(elementReader,context)
now
query.execute()
status.getPath().getName()
entry2.getKey()
new int[w]
new ArrayList<String>(names.size())
getPaddingLeft()
new int[64]
result.iterator()
getTrace()
(SAXTransformerFactory)SAXTransformerFactory.newInstance()
getAttribute(key)
ctx.block.namedExprsMgr.addExpr(expr.getChild())
context.getParent()
outputDirectory
proxy.getClass()
event.getSensor()
Calendar.getInstance(tz)
(Object[])val
type.getPhysical()
new QueryResult()
context.exactWrappers
Toolkit.getDefaultToolkit()
Float.NEGATIVE_INFINITY
getDeployedApps()
new ArrayList<List<String>>()
context.getHttpRequest()
request.getName()
TomcatHelper.getServer()
service.getClass()
normalizeURI(entry.getEntryArg(0))
resolveAlias(propertyPath)
Proxy.getInvocationHandler(obj)
block.getBlockPoolId()
new ActionList()
startTime
KMSMDCFilter.getURL()
entry.getNodeState()
getPrivilege(grantPrivilege,pm)
request.getRoleSet()
y2 - y1
context.findServletMappings()
Long.valueOf(elementReader.getElementAsString())
arg.getClass()
desc.isStoreSeparate()
new Path(dir)
new ServerConfiguration()
setter.getName()
new java.util.HashSet()
component.getProperties()
matcher.group(matcher.groupCount())
HttpTool.getErrorContent(url)
strTok.nextToken()
tightUnmarshalString(dataIn,bs)
t % bytesPerMetricUnit
n.getName()
ByteBuffer.allocate(BUFFER_SIZE)
builder.toString()
new HashSet<Bundle>()
stack.size()
features.size()
DatatypeConstants.FIELD_UNDEFINED
new GenericBeanDefinition()
(FileSplit)split
targetOp.getOutputWrapper()
new JsonParser()
buffer.array()
executionManager.allTasksLive()
items.next()
new ResourceFinder("META-INF/")
(TreeNode)list.next()
new CompletableFuture<Void>()
Strings.nullToEmpty(entry.getValue()).trim()
getAttribute(SERVICE_STATE_ACTUAL)
region.getType()
limit - cursor
(double[])o
System.getProperty("file.separator")
new NamedMethodInfo()
super.createContents(parent)
k.next()
new SourceTransformer()
new ArrayList<Command>()
UserGroupInformation.getCurrentUser().getShortUserName()
nextSemiOrComma()
new PipedOutputStream()
data[offset++]
new ArrayList<XmlNode>()
getSource()
findNull(bytes)
new TezSpillRecord(numPartitions)
constructor.getParameterTypes()
osDetails.getVersion()
ds.getIncludedFiles()
new Person()
new float[6]
supplier.get()
element.getQName()
XByteBuffer.toInt(data,pos)
readLong()
socket.getInetAddress()
ReflectionUtils.newInstance(reducerClazz,conf)
attr.getNamespaceURI()
System.err
new AtomicInteger(-1234)
entry.getKey().getLocalPart()
it.get()
next.getKey()
new Path(getProject())
new TListSentryRolesResponse()
(Object[])o
new EJBResponse()
url.getHost()
insertNode.getTableSchema().getColumnId(column.getQualifiedName())
f.listFiles()
httpServletRequest.getQueryString()
new HiveConf()
new Path(input)
new ProcessBuilder()
new LinkedMultiValueMap<String,Connection<?>>()
currentPage
currentState
threadContext.getTransactionPolicy()
(Key)obj
cmd.getOptionValue("i")
delayedContainers.iterator()
args.get(2)
getReplicaInfo(b)
container.getName()
distream.readInt()
(BasicStroke)stroke
getReadBuffer()
new HashSet<MediaType>()
getContext(type)
new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32())
jp.readValueAs(JsonNode.class)
new PrintWriter(baos)
entityManagerFactoryCallable.getUnitInfo()
getImageInfo(byteSource)
operation.getInterface()
new ArrayList<Capability>()
SecureKeys.newKeyPair()
options.get("host","239.255.3.2")
RootInputLeafOutputProto.newBuilder()
ps[0]
new ContextConfig()
col.getDataType()
(UnaryOperator)this
new Object[paramCount]
(CdiResourceInjectionService)webBeansContext.getService(ResourceInjectionService.class)
k.indexOf('{')
new PrintStream(out)
readUnsignedShort()
new HashMap<QName,Intent>()
getMBeanServer()
bm.createCreationalContext(bean)
request.getResource()
this.currentChar
(float[])o
Long.parseLong(parts[1])
interfaces[i]
SystemInstance.get().getComponent(DiscoveryAgent.class)
lock.writeLock()
getBlock(groupString,UNIT_OPEN,UNIT_CLOSE,groupIndex)
n.getNodeName()
clazz.getAnnotation(Resources.class)
new ArrayList<DatanodeStorageInfo>()
context.createMetadata(MutableValueMetadata.class)
info.getImageTypeDescription()
new File(parentDir,simpleName + "." + timestamp+ ".bak")
obj
timestamps.iterator()
method.getParameterNames()
PlannerUtil.clone(context.plan.getLogicalPlan(),node)
artifact.getFile()
visit(context,plan,block,node.getLeftChild(),stack)
length()
new WebAppContext()
FSImageSerialization.readString(in)
(FunctionExpr)expr
element.offset + element.length
new String[5]
brooklyn().getEntity(applicationToken,entityToken)
new HashMap<Vertex,Edge>()
project.getState()
uri.getSchemeSpecificPart()
stat.getPath()
locale.getLanguage()
new ArrayList<ClassOrInterfaceTypeDetails>()
statement.executeUpdate()
new double[len]
new ArrayList<Instance>()
inputFiles.size()
internalCreateSpecLegacy(mgmt,itemToAttempt,MutableSet.<String>of(),true)
DistributedCache.getCacheFiles(conf)
ImmutableMultimap.builder()
new InetSocketAddress(getAddress(),getPort())
threadStorage.get()
masterWriter.get()
file.getFileName().toString()
authorization(url)
argv[0]
new ArrayList<>(0)
delegate
newInfo(file)
new MethodParams()
EMPTY_STRING
ps[1]
new ExecutionContext()
contexts.get()
req.getServletPath()
new Path(stagingArea + NAME + "_"+ randomId)
new ThreadContext(beanContext,primaryKey)
0xff & data[1][y][x]
new ArrayList<>(fields.size())
getAlgorithm()
classLoader.loadClass(clazz)
csm.getScanlineStride()
new JobClient(jobConf)
webModule.getScannableUrls()
componentReference.getReference()
getCurrentSize()
queue.size()
new SortSpec[joinKeyPairs.size()]
location.getParent()
attribute.getNodeValue()
addAttributeAndCheck(attribute)
Lists.newArrayListWithExpectedSize(2)
new ClusterResponse()
entry
isRequestor(message)
src.readInt()
oldInfo(file)
loaded.clazz
new NamedSet<>()
reference.getClassName()
new Stat()
proxyName.replace('.','/')
keys
getX()
buf.readableBytes()
new ArrayList<TreeNode>()
KeyStore.getInstance(keyStoreType)
getBlock(counterString,UNIT_OPEN,UNIT_CLOSE,counterIndex)
asBitSet()
text.toCharArray()
new ReleaseResult()
job.getCounters()
new float[4]
rpc.getStub()
in.read(buffer)
tomcatWebAppBuilder.availableApps()
child.getTextContent().trim()
assemblyFactory.createComponentType()
cell.getStringCellValue()
reader.getAttributeValue(null,"type")
new RequestData()
new InterceptorData(clazz)
(byte[])o
HttpTool.getHttpStatusCode(url)
new ArrayList<Triple>()
context.findApplicationParameters()
ctxt.getClassFileName()
part.getElementName()
context.findWatchedResources()
Integer.parseInt(wsr.readtoWhiteSpace())
new ResourceFinder("META-INF")
pcMap.get(pc)
jsonElement.getAsJsonObject()
WritableUtils.readString(input)
new FilterMapping()
getFrequencyTotal(table,all.mins,all.maxs,precision)
directory.entries
readRawVarint32()
Integer.parseInt(args[3])
new JPanel(new FlowLayout(FlowLayout.LEADING))
tok.nextToken().trim()
new ArrayList<EndpointReference>()
file.lastModified()
builderFactory.createArrayBuilder()
new Path(Path.SEPARATOR)
messageFactory.createMessage()
nl.getLength()
(PasswordCallback)callbacks[i]
img.getHeight()
AWSEC2TemplateOptions.class.cast(template.getOptions())
knifeConfigFileOption()
new ArrayList<JobQueueInfo>()
lookup(name)
operation.getInput().getMessage()
new Area()
keys.iterator()
serverSock
toCommandSequence(commands,env)
createInOnlyExchange(service,interfaceName,operation)
Boolean.TRUE
rs.getString("COLUMN_NAME")
new long[1]
managementContext.getStorage().getMap(APPLICATION_USAGE_KEY)
getLocalizedMessage()
tuple.getValue()
newLabel()
expressions.get(i)
new StringBuffer(super.toString())
this.getCurrentDir()
new DefaultMQAdminExt(rpcHook)
description.getBuildSpec()
readIntLE()
LocalMBeanServer.get()
project.getArtifact()
entry.getEntryArg(0)
Long.parseLong(tokens[0])
DataType.UNKNOWN
new DateTime()
new GridPane()
looseUnmarshalString(dataIn)
x1
new double[values.size()]
readAheadEntries.poll()
args[index++]
new InjectionMetaData()
getPriority(block,oldReplicas,decommissionedReplicas,oldExpectedReplicas)
new ArrayList<JavaType>()
node.getProperties()
new ObjectName(parent)
records.get(i)
service.getPorts()
y1
y2
messages.next()
privEnt.getValue()
new ArrayList<>(files.length)
jmsBinding.getResponseDestinationName()
new AttributesImpl(attr)
getRegion()
graph.getEdge(sourceType,resultType)
classpath
p.getRoots().get(0)
(EntityBean)value
length >> 2
table.get(get)
input.get(0).toString()
new CmdLineParser(options)
HBaseConfiguration.create()
is.read(buf)
new ArrayList<Export>()
get(CdiEjbBean.class)
new int[len]
b.getLength()
getMachine().getOsDetails()
(StandardContext)source
new FileInfo(path)
Exceptions.getFirstThrowableOfType(e,IOException.class)
new File(home,"lib")
getAttributes()[i].getKey()
entity.getAttribute(Attributes.SERVICE_UP)
new Timestamp(System.currentTimeMillis())
propertiesMap.get(key)
new ResourceResponse()
parseExpression()
visit(ctx,stack,expr.getPredicand())
path.toUri().toString()
pTree.getCumulativeVmem()
new ArrayList<Segment<K,V>>()
getCollection(key)
iter.next().getValue()
MutableMap.copyOf(flags)
new JaxRpcParameterInfo()
cluster.getMembers()
peek()
ctx.getVariableMapper()
xmlType.getElementName()
keys[i]
(List)allCommands.get(mimeType)
item.getText(1)
out
getRowIndex()
webService.targetNamespace()
new LinkedHashSet<ItemType>()
parser.nextEvent()
policyFactory.createIntent()
new ResolveOptions()
AggregateClassLoader.newInstanceWithNoLoaders()
customStream.get()
versionedId.lastIndexOf(VERSION_DELIMITER)
modelType.getInterfaces()
new Host[hosts.length - 1]
taskFactory.newTask()
list[i]
Integer.valueOf(0)
request.getValue()
value.charAt(0)
new TypedProperties()
service.getService()
new ArrayList<AnnotationAttributeValue<?>>()
doc.createElement("param")
new Value()
new ArrayList<MethodMetadataBuilder>()
masterPlan.getExecBlock(channel.getSrcId())
new FileInputStream(filename)
outputPath.getFileSystem(conf)
new ArrayList<MethodMetadata>()
PublicId.normalize(entry.getEntryArg(0))
conn.getResponseCode()
commands.get(cmdName)
ejbModule.getOpenejbJar()
context.plan.newExecutionBlock()
rtg.getRandomWord()
s3service.getObjectMetadata(bucket,key)
schema.getField(i)
new TezSpillRecord(partitions)
f.list()
new Parameters()
Integer.parseInt(defaultValue.substring(9))
stream.readInt()
UserGroupInformation.getCurrentUser().getUserName()
stateLastGood.get()
binding.getExtensibilityElements()
(SessionBean)b
GSSManager.getInstance()
new ActionMessage()
reader.getBlockEntryCount(curBid)
new byte[512]
Long.parseLong(parts[2])
Resource.newInstance(0,0)
Lists.newArrayListWithExpectedSize(metadatas.size())
ejbModule.getEjbJar().getEnterpriseBeansByEjbName()
tables.get(tableId)
FutureUtils.createFuture()
new HashCodeBuilder()
new HeaderImpl()
plan.getRootBlock().getRoot()
chunk.getByte(pltIndex++)
policyFactory.createPolicySet()
new String[]{}
context.queryBlock
tokens[2]
new byte[12]
getProvisioningLocation()
new Features()
SUCCESS
path.getOffset()
IOUtils.toString(inputStream)
service.getProperties()
format("%s stop",getRiakCmd())
new ObjectRecipe(clazz)
(ByteBuffer)value
new LinkedHashSet<InetAddress>()
reader
lm.getHeight()
h.next
uri.getPath() + "/" + logName
new HashMap(2)
headers.size()
newKeyStore()
CatalogUtils.newClassLoadingContext(managementContext,item)
pair.getSecond()
elementReader.getElementAsDomElement()
raf.readUnsignedShort()
new Dimension()
builder.start()
(ByteChunk)param
context.getCurrentDAG()
{0,0,0,0}
mb.getByteChunk()
new SuperProperties().caseInsensitive(true)
new ManagedMap<>()
datatypeFactory.newXMLGregorianCalendar(elementReader.getElementAsString())
md.getModuleRevisionId()
color.getRGB()
ctxt.getServletPackageName()
multipart.getBodyPart(i)
tree.getSelectionPath()
getTajoRootDir(conf)
task.getSubmittedByTask()
session.getId()
features[i]
PlannerUtil.clone(context.plan.getLogicalPlan(),currentNode)
getObject()
rsmd.getColumnCount()
(String)args.get(2)
statement.getObject()
providerClass.newInstance()
path.value()
appModule.getAdditionalLibraries()
new LongOpenHashSet()
(IStructuredSelection)getSelection()
WHITE
beanContext.getMatchingBeanMethod(callMethod)
checkProxy(method,bean)
new ParamValue()
skipIt.next()
queue.pop()
buf[charPos]
session.createProducer(destination)
schema.getTypes()
new JobConf(getConf())
line.get("JOB_PRIORITY")
new StringList()
new LogRecord(level,msg)
new CompositeConfiguration()
(String)source
channel
ByteString.newOutput(SPLIT_SERIALIZED_LENGTH_ESTIMATE)
connectionInitSqls
bundle.getHeaders()
new KeyDescription()
inputSpec.getSourceVertexName()
blockPoolManager.get(bpid)
new byte[c]
getConfig(TARGET_SENSOR)
Runtime.getRuntime().totalMemory()
dlm.getLogRecordCount()
new JTextArea()
new CompletableFuture<DLSN>()
dataSource.getConnection()
(ObjectReader)key.attachment()
new Object[]{}
ArtifactUtils.versionlessKey(groupId,artifactId)
readLong(input)
new ArrayList<Span>()
readEmpty(elementReader,context)
(String)e.getKey()
node.getChild()
palette.getEntry(i)
new Listener()
JsonNodeFactory.instance.arrayNode()
new File(name)
super.skip(n)
((RuntimeComponent)component).getImplementationProvider()
computedFanout
new byte[bytesPerRow]
paging_template.expand(params)
new BufferedInputStream(url.openStream())
vs.value
corruptReplicas.getNodes(b)
memento.getManagementNodes().get(ownNodeId)
context.extensionWrappers
new File(appBase)
ugi.getShortUserName()
table[bucket]
message.calculateEncodedLength()
json.objectNode()
namespace.getLogs()
new VectorWritable()
new HashMap<JobACL,AccessControlList>()
t.getPredicate()
parseIndex
job.getName()
inputs.get(0).getMapId()
privilege.getAction()
new GridLayout(1,false)
Response.ok()
pkField.getName()
new LocalDirAllocator(TezRuntimeFrameworkConfigs.LOCAL_DIRS)
new InputSource(in)
readInt(is)
new AuthenticationMechanism()
intrface.getMethods()
engine.findChildren()
parsedDN.getO()
new MimeMessage(session)
fs.getFileStatus(archiveIndexPath)
context.getExternalContext()
new Object[len]
replicaInfo.getBlockFile()
new Link()
new ArrayList<>(choices.size())
e.getOutputVertex()
new StringBuffer(1000)
new LinkedHashSet<URL>()
name.substring(index + 1)
bc.getStart()
string.charAt(i)
SystemInstance.get().getBase()
vertexGroupInfo.get(vertex.getName())
new byte[bytesPerLine]
classLoader.loadClass(className)
new ArrayList<Binding>()
evt.getPropertyName()
address.toString()
r.x
new File(System.getProperty("catalina.base"),"conf")
child.getAttributes()
getGlyphTransform(glyphIndex)
request.getServletPath()
operation.getInputWrapper()
new InputSource(is)
buff.getLong()
port.getExtensibilityElements()
new Stack<FileStatus>()
Array.newInstance(javaType,((List<Object>)propertyValue).size())
context.getLogger()
v.toString()
conf.getNumReduceTasks()
poolEntry.getConnection()
joinNode.getRightChild()
new RabbitConnectionFactoryBean()
new HashSet<Resource>()
assemblyFactory.createReference()
message.getHeaders().get(MessageHeaders.CONTENT_TYPE)
results.size()
(HttpServletResponse)servletResponse
ih.getInstruction()
dataIn.readShort()
getProperty(name)
new CompletableFuture<LedgerHandle>()
request.getDecodedRequestURI()
webService.endpointInterface()
def.getDefaultValues()
new Socket()
new MetaAnnotatedClass(clazz)
n.getNodeType()
cause.getMessage()
MetricsUtil.getContext("mapred")
new SunColumnName(columnPair.getColumnName().get(1),table.getName())
srcDir.listFiles()
"None"
new StringBuilder(String.valueOf(status.getLen()))
cell.getNumericCellValue()
(Map)obj
subNifs.nextElement()
node.getParentNode()
ejbModule.getClassLoader()
child.getChild()
servlet.servletClass
new Node<>(key,value)
new VerticalLayout()
requestMessage.getSOAPEnvelope()
new String[attributes.size()]
data[i++] & 0xFF
new Token<DelegationTokenIdentifier>()
new SimpleAttributeSet()
getCurrentSizeOperator().apply(poolEntity)
reader.getLastAddConfirmed()
SSIServletRequestUtil.getRelativePath(req)
connection.prepareStatement(sql)
(File)it.next()
n.getPreviousSibling()
type.getFeatures()
MDC.getCopyOfContextMap()
getAttribute(CURRENT_SEEDS)
(SessionBean)bean
reader.getName().getLocalPart()
childElement.getAttribute("name")
res.getString(1)
new TaskAttemptID()
lexicalRepresentation
args.getOperation()
sort.getSort()
getRelativePath(req)
uri.getCharChunk()
portsByQName.get(portAddress.getPortQName())
Collections.synchronizedList(new ArrayList<>())
webModule.getWebApp()
new Claim()
(List<JobExecution>)jobService.getJobExecutionsForJobInstance(jobInstance.getJobName(),jobInstance.getId())
new HttpConfiguration()
contributionFactory.createContribution()
readPassword()
getArray()
System.getProperty("user.dir")
ServletActionContext.getResponse()
currentPath
response.readEntity(String.class)
it.next().get()
table.getName()
getBlockFile()
Identifiers.makeRandomId(8)
parts.get(0)
new ServicesJar()
getMatchingBeanMethod(method)
tmpMB.toString()
readMultiByteInteger(is)
((Number)value).doubleValue()
(String)ois.readObject()
new HashSet<Triple>()
clazz.getConstructors()
new MimeMultipart()
TaskLog.getTaskLogLength(conf)
Json.createObjectBuilder()
path.getFileSystem(getConf())
Identifiers.makeRandomId(6)
1 << bits
new ArrayList<Text>()
readText(elementReader,context)
serviceRecipe.getUnsetProperties()
new int[width * height]
m.getParameterTypes()[0]
value.doubleValue()
readProperty(elementReader,context)
child.getType()
fs.getFileStatus(masterIndexPath)
new Duration()
n.getChildNodes()
getModel()
readFacesOrderingOthers(elementReader,context)
request.getHeader("If-Match")
((Number)entry.getValue()).longValue()
new ServletInfo()
attributes.getValue("type")
new ArrayList<Segment>()
col.colIndex
property.getKey()
keyValue.getValue()
line.get("FINISH_TIME")
classLoader.loadClass(name)
new PrintStream(write)
context.execBlockMap.remove(child.getPID())
new ArrayList<>(10)
new DelegationKey()
(MessageDrivenBeanInfo)bean
exchange.getEndpoint()
values.get(0)
session.getAttribute(name)
new File(System.getProperty("user.home"))
new GregorianCalendar(1970,1,1,0,0,0)
event.getElement()
output.getName()
operation.getInputType()
new ByteVector()
new SourceTransformer().contentToString(message)
e.getClass()
tbinput.readRaw()
requestHeaderMessage.getByte()
factory.createWSDLDefinition()
UUID.randomUUID()
new ArrayList<String>(3)
new ArrayList(2)
beanManager.createCreationalContext(null)
new JarBuilder()
input.toCharArray()
new SearchCriteria()
new SinkEventAttributeSet()
getTextBounds()
Array.getLength(array)
in.readVInt()
buf.getLong()
req.getRequestURI()
word.length()
Double.MIN_VALUE
Integer.parseInt(m.group(1))
def.getName()
children.get(name)
value()
(Locale)session.getAttribute(Globals.LOCALE_KEY)
bkc.get().openLedger(ledgerId,BookKeeper.DigestType.CRC32,getConf().getBKDigestPW().getBytes(UTF_8))
new MutableList<Object>()
(JavaInterface)interfaze
(BinaryNode)node
getVertex(source)
clazz.getClassLoader()
session.getUser()
new Union()
context.findChildren()
model.getBaseLocation()
new ChannelData(false)
element.getChildren()
chunk.getInt4(0)
properties.get(name)
sm.getDataType()
Runtime.getRuntime().freeMemory()
new Label(this,SWT.NONE)
validatable.getValue()
n - 1
new JLabel("Common Name (CN)")
(String)object
Long.parseLong(parts[3])
(RemoteBean)bean
new String[sortKeyNum]
PlanKeyValuePair.newBuilder()
(AssignOperator)op
line.get("JOB_STATUS")
SystemInstance.get().getConf(null)
segmentList.get(readSegmentIndex)
super.getMemberSpec()
data.length()
elementReader.getElementAsString()
System.console()
new byte[bb.getInt()]
VersionInfo.getVersion()
getBeanContextByClass(entityBean.getClass())
new StringBuffer(8)
list.removeFirst()
(MethodDeclaration)node
SystemInstance.get().getProperties()
new File("tmp")
new ArrayList<Property>()
new VTuple(target.size())
new File(warFile,"WEB-INF")
new HashMap<String,List<Type>>()
new StringBuilder(50)
Iterables.getOnlyElement(wrapperApplication.getChildren())
cur.getNetworkLocation()
operation.getInputType().getLogical()
iter.next().get()
list.next()
readFacesNullValue(elementReader,context)
image.getWidth(null)
context.getInputSplit()
session
new GridData(SWT.FILL,SWT.FILL,true,true)
EncoderFactory.get().binaryEncoder(out,null)
src.length
readln()
message.getContent(XMLStreamWriter.class)
dataStack.pop()
new LinkedList<FileStatus>()
TypeToken.of(arguments[0])
new DataInputStream(is)
System.lineSeparator()
new StringBuffer("SELECT ")
new ProcessorInputPortBinding()
new Tuple()
Regions.getCurrentRegion()
user.getId()
new double[numbers.length]
threadContext.getBeanContext()
new ThreadContext(beanContext,null)
systemInstance.getComponent(EjbResolver.class)
ref.getClassName()
getAddressOfEntity(member)
f.schema()
subset.total
action
getDefaultRootElement()
new JsonFactory()
new HashSet<Contribution>()
context.findWrapperListeners()
new StringBuilder("{")
SpringCoreUtils.getDocumentBuilder()
new LinkedList<Integer>()
taskStatuses.get(taskid)
Status.OK
reference.getInterfaceContract()
new HashMap(source.getProperties())
new ClientConfiguration()
new CallFuture<>()
new BitParser(unfiltered,bitsPerPixel,bitDepth)
new ArrayList<Contribution>()
Logger.getLogger(AbstractFacesInitializer.class.getName())
t.getSubject()
(UnnestOperator)op
container.iterator()
file
constructor.newInstance()
XMLSplitterSerialisationHelper.extensionXMLToTypeDescriptor(element)
terms.size()
jc.createUnmarshaller()
kv.getKey()
getNode(scope)
getColumns()
new OptionParser()
Type.getArgumentTypes(desc)
me.createMessage()
Runtime.getRuntime().maxMemory()
new HashSet<RDFTerm>()
getTimezone()
new Rectangle()
parsedDN.getOU()
((buffer[bufferPosition++] & 0xff) << 24) | ((buffer[bufferPosition++] & 0xff) << 16) | ((buffer[bufferPosition++] & 0xff) << 8)| (buffer[bufferPosition++] & 0xff)
instance
(AbstractBinaryJoinOperator)op
bytes[i++]
connection.createStatement()
atts.item(i)
token.nextToken().toLowerCase().trim()
autoBuild()
getMetadata()
jobExecution.getJobInstance()
new ArrayList<PolicySet>()
container.getPriority()
aggregates.size()
bundle.getBundleId()
new ScheduleExpression()
SystemInstance.get().getComponent(SecurityService.class)
buffer.size()
context.findWrapperLifecycles()
context.getOptions()
atts.getValue(i)
jmsBinding.getActivationSpecName()
new Path(warehouseDir)
MessageDigest.getInstance(algorithm)
new ArrayList<Mutable<ILogicalExpression>>()
exceptionType.getPhysical()
containerSystem.getJNDIContext()
readTimeout(elementReader,context)
req.getHeaderNames()
Calendar.getInstance().getTimeInMillis()
input.get(0)
context.getLoader().getClassLoader()
length - 1
bootstrapClass.getMethod("getNode").invoke(bootstrap)
type.getName()
user.getRoles()
DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument()
createHeader()
element.getName()
ti.next()
getDynaProperties()
getMSentryPrivilege(tPrivilege,pm)
records.get(0)
new TextArea()
(PasswordValidationCallback)callback
pageContext.getOut()
currentOrNull(currentText)
(String)property
readFile(byteSource,false)
characters.length()
new boolean[size]
new KeyValue(authorizable)
input.byteAt(i)
new StringBuffer(DEFAULT_BUFFER_SIZE)
response.getEntity()
new Pair<>()
context.createMetadata(MutableRefMetadata.class)
request.getQuery()
createConnection()
in.readString()
params.get(i)
(in.get() & 0xFFFF)
header.getValue()
m.group()
new double[reds]
property.getId()
PlannerUtil.getSortKeysFromJoinQual(plan.getJoinQual(),leftExec.getSchema(),rightExec.getSchema())
line.get("SHUFFLE_FINISHED")
type.getActualTypeArgument(0)
componentType.getServices()
column.getName()
element.getAttribute("name")
Channels.pipeline()
(Throwable)responseMessage.getBody()
new ArrayList<Attribute>()
new long[nSpec]
ByteBuffer.allocate(1)
msg.getOperation()
' '
operation
ZERO
QuickServerXmlParser.parse(serverXml)
Text.readString(inStream)
0xff & data[0][y][x]
new HdfsConfiguration()
(String)((Object[])msg.getBody())[0]
new Attribute(line)
new HashSet<Method>()
SystemInstance.get().getComponent(TransactionManager.class)
new String(baos.toByteArray())
pType.getActualTypeArguments()[0]
event.getDagID()
chain.getSourceOperation()
new Array2DRowRealMatrix(data,false)
tokens[i]
AxiomHelper.createOMElement(factory,name,dataSource)
invocationContext.proceed()
getVersion()
jaxbContext.createUnmarshaller()
input.readBoolean()
new Element()
new byte[pos]
subNamespaces.keySet()
outputItem.getItemLength()
request.getSessionInternal(false)
OMAbstractFactory.getOMFactory()
writer.getPrefix(uri)
width * height
(XMLType)dataType.getLogical()
m.get(key)
ThreadContext.enter(threadContext)
SystemInstance.get().getComponent(Scheduler.class)
key.getColumnQualifier().toString()
Iterables.filter(getChildren(),CanDeployAndUndeploy.class)
new PathAnnotation()
timeout.countdownTimer()
request.getRemoteUser()
resolver.getTargets()
new DelegationTokenIdentifier()
getEntityUrl()
super.getMembers()
getCharacterEncoding()
reference.getInterfaceContract().getInterface()
stringInterner.intern(Strings.nullToEmpty(entry.getKey()).trim())
matcher.group(4)
blocks.length - 1
consume()
triple.getSubject()
CommandLineUtils.getSystemEnvVars()
e.get()
stat.getTaskTrackers()
Maps.newLinkedHashMap(config.getAllConfig())
attributes.get("model")
dictionary.keys()
new CircleStreamBuffer()
new DistributedLogConfiguration()
(javax.jms.Message)msg.getBody()
(String)this.stack.pop()
tag.getName()
f.get()
new byte[]{0,0,0,0}
ByteBuffer.allocate(size)
attributes.getValue(i)
ejbModule.getAltDDs().get("openejb-cmp-orm.xml")
node.getSession()
new Holder<>()
buf.duplicate()
getFile()
javaXmlTypeMapping.getAnonymousTypeQname()
GridDataFactory.fillDefaults().grab(true,false)
clazz.get()
new ArrayList<Value>()
expressions.get(0)
getContentLength()
method.getAnnotation(Remove.class)
new HashSet<T>()
factory.createXSDefinition()
spec
readNamedMethod(elementReader,context)
new SQLException()
src.getFileSystem(conf)
BrooklynTaskTags.getCurrentEffectorParameters()
children.size()
SystemInstance.get()
getPaint()
context.newVar()
new int[256]
getCachedLogWriter()
bytes[index++]
new ComplexFuture<>(callback)
new ObjectName(onStr)
tmClient.getStub()
bean.getName()
new CompletableFuture<LogSegmentMetadata>()
Records.newRecord(ApplicationSubmissionContext.class)
chunk.getInt4(4)
children[i]
fi.next()
f.stringValue()
new ObjectOutputStream(bos)
reader.getAttributeValue(null,NAME)
fs.listStatus(path)
new Section()
new JFileChooser()
"arg" + i
newLinkedHashMap()
new Builder()
getVertex(target)
standardContext.getLoader().getClassLoader()
toAppendTo.length()
event.getApp()
buffer.getPosition()
configuration.getAvailableServices()
jmsBinding.getDestinationCreate()
ae.newCAS()
ResourceUtils.create(this)
params[0]
new char[8192]
(Node)obj
super.getParameterMap()
context.wildcardWrappers
content.charAt(i)
keyGen.generateKey()
new Gson()
'.'
(TomcatWebAppBuilder)SystemInstance.get().getComponent(WebAppBuilder.class)
(Import)iter.next()
plan.createNode(JoinNode.class)
new ArrayList<Composite>()
new URL(uri)
componentType.getReferences()
TupleComparatorProto.newBuilder()
new CachedOutputStream()
new Action()
options.shouldPreserveRawXattrs()
(Object[])state
Lists.newArrayListWithExpectedSize(uris.size())
zipFile.entries()
name.split("/")
new CallbackInfo()
reader.nextName()
mTupleFactory.newTuple(3)
documentBuilderFactory.newDocumentBuilder()
new PrintWriter(stringWriter)
mapEntry.getValue()
iter2.next()
(String)env.get(Context.SECURITY_CREDENTIALS)
m.getParameterAnnotations()
p.getValue()
elem.getChildNodes()
readHeader(byteSource)
new HashSet<LogicalVariable>()
mapping.get(pos)
command.getParameters()
masterPlan.getExecBlock(dataChannel.getSrcId())
new PlanString(this)
(VariableReferenceExpression)expr
mTupleFactory.newTuple(2)
new MutableList<String>()
new LinkedBlockingQueue<String>()
calculateStatus()
palette.length()
0xff & data[2][y][x]
jjtGetNumChildren()
resultSet
makeQualified(f)
getNamespace().getLogs()
new Annotation()
beanContext.getCallbackInterceptors()
getLastDayOfMonth(mon,cl.get(Calendar.YEAR))
resolveObject(name,type)
new ArrayList<IOException>()
new Button(composite,SWT.PUSH)
takeIndex
tokenizer.getToken()
os.toByteString()
s1.length()
resultSet.nextBinding()
readIdentifier()
ValueFactoryImpl.getInstance()
currentAddresses.iterator()
Sets.newTreeSet(SummaryComparators.nameComparator())
new LongAdder()
service.getInterfaceContract().getInterface()
getRawType(actualType)
event.getType()
getTail()
parameterTypes.length
assemblyFactory.createComposite()
attributes.getAll()
callContext.getBeanContext()
new File(url)
new CacheEntry()
(TajoConf)conf
fmap[i]
node.getValue()
UNDEFINED
tokenizer.next()
node.getType()
i - 1
currentEdge
new BlackListInfo()
getEntity().getAttribute(SoftwareProcess.EXPANDED_INSTALL_DIR)
directory.getTiffImageData()
groupbyNode.getGroupingColumns()
find(key)
path.toFile()
event.getEventId()
list.getLength()
(1 << bitsInCache) - 1
doc.getRootElement()
parameter.getValue()
line.get("START_TIME")
other
inputStream.readBits(1)
g2d.getTransform()
clazz.getSuperclass()
new ProcessorBinding()
readParamValue(elementReader,context)
image.getHeight(null)
(Strings.isEmpty(getUsername()) ? "" : getUsername() + "@") + getHostAddress() + ":"+ remote
operands.get(0)
getKey()
(ASTNode)ast.getChild(0)
new LdifEntry()
new HashMap<Method,String>(methods.length)
table[index]
os.is64bit() ? "x86_64" : "i686"
MultimapBuilder.hashKeys().hashSetValues().build()
reader.peek()
(TraversableSource)source
new LoggedDiscreteCDF()
new Point2D.Double()
binding.getURI()
estimateSizeRecursive(context,leftLineage)
Long.parseLong(parts[4])
this.lock
classReference.getJavaClass()
IO.slurp(file)
(BooleanQuery)query
securityRoleRef.roleLink
read
methodParameter.getGenericParameterType()
cas.getJCas()
permission.getClass()
group.getName()
it.previous()
EvalTreeUtil.findUniqueColumns(evalNode)
new PipedInputStream()
ManagementFactory.getThreadMXBean()
method.getGenericReturnType()
JoinOrderStringBuilder.buildJoinOrderString(plan,block)
param[0]
new SessionBean()
parent.getPath()
new java.util.HashMap()
keyLock.readLock()
appContext.getWebBeansContext()
new File(s)
reader.getText()
queue.remove()
cas.getTypeSystem()
row
timer.getTimeoutMethod()
deque.getIdleObjects()
new Histogram()
header.getPart()
ManagementFactory.getRuntimeMXBean()
new StringBuilder(20)
new PrintStream(baos)
Collections.EMPTY_SET
"Unknown"
new FloatWritable()
messageExchange.createMessage()
makeTile(tileX,tileY)
node.getNodes()
tableName
getDirectory()
id.getName()
event.getTaskAttemptId()
val.getStdout()
new ArrayList<Container>()
repository.getConnection()
KeyFactory.getInstance("RSA")
margin
context.findConstraints()
datum.asInt4()
(Document)result.getNode()
ejbModule.getEjbJar().getAssemblyDescriptor()
this.type == other.type
new double[k]
DatatypeConstants.INDETERMINATE
getWrappedPart(outputMessage)
path.toUri().getPath()
standardContext.getName()
XMLInputFactory.newInstance().createXMLStreamReader(inputStream)
visit(ctx,stack,expr.getRight())
new MapWritable()
0xff & (rgb >> 8)
input.split("\\s+")
JavaCore.create(project)
new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.SET,iprot.readI32())
targetOp.getInputWrapper()
new Plugin()
new JNDIResponse()
new Category()
status.getLen()
request.getHeaders()
config.getName()
WritableUtils.readVInt(di)
unit.toMillis(timeout)
Files.createTempDir()
new HierarcyBuilder().addTableToOutput(getAuthServer(),context.getDbName(),context.getTableName())
parameterizedType.getActualTypeArguments()[0]
bodyContent.getString()
new Timestamp(cal.getTimeInMillis())
analyzer.getCurrentTb()
new ScriptEngineManager()
getUser(setup)
cas.getAnnotationIndex(type)
fieldType.getTypeName()
new BsonDocument()
factory.objectNode()
getTable(tableName)
view
fileManager.getCurrentDataflow()
info.getUserPassKey()
yarnClient.getApplicationReport(appId)
SystemInstance.get().getComponent(DeploymentExceptionManager.class)
p.getObject().getPooledConnection()
n.getLocalName()
findRunLength(bytes,dup)
new Reference()
orb.create_any()
it.nextNode()
new FileReader(file)
new StringBuilderWriter()
getToolkit().getScreenSize()
new Composite(this,SWT.NONE)
new LinkedHashSet<Object>()
readBigInt(stream,1)
getServiceReferences()
results.iterator()
new BasicBSONObject()
ejbModule.getModuleUri()
chain.getTargetOperation()
service.getId()
new StringBuilder(16)
new HashMap<QName,Object>()
CallContext.getCallContext()
messageContext.getRequestMessage()
new ByteArrayInputStream(data,offset,length)
new Histogram[ParsedHost.numberOfDistances() + 1]
new ProcessorOutputPortBinding()
new ArrayList<HCatFieldSchema>()
srcst.getLen()
fields[i].getModifiers()
item
entity.getAttribute(attribute)
new Attribute()
readItem(reader,context,map)
webService.name()
association.getInverse()
new long[]{0,0}
binding.getObject()
new AnnotationConfigWebApplicationContext()
archive.getName()
SystemInstance.get().getComponent(ContainerSystem.class).getJNDIContext()
new GroupbyNode(context.plan.getLogicalPlan().newPID())
pattern
(e.getNamespaceURI() == null) ? "" : e.getNamespaceURI()
0xff & (rgb >> 0)
call.rel(1)
new MethodConcurrencyInfo()
triple.getPredicate()
new Hashtable<Object,Object>()
(Map.Entry<?,?>)o
new ArrayList<DataType>()
new ArrayList<TaskStatus>()
XByteBuffer.toInt(msg.getMessage().getBytesDirect(),msg.getMessage().getLength() - 4)
getJavaProject()
new Result()
inputs.get(0)
tokenizer.consumeIdentifier()
TransformerFactory.newInstance().newTransformer()
beanClass
attributes.getLocalName(i)
new File(uimaHomeDir,"examples/descriptors/analysis_engine/PersonTitleAnnotator.xml")
samples[0]
new SettableListenableFuture<>()
getConnectionFactory()
clazz.getInterfaces()
new double[n]
((KafkaMessageHeaders)message.getHeaders()).getRawHeaders()
getMaxIdlePerKey()
is.readByte()
node.getArg()
new byte[6]
readTldExtension(elementReader,context)
Lists.newArrayListWithCapacity(truncateList.size() + 1)
(GridBagConstraints)gbcValue.clone()
getCurrentTime()
new Path(file)
binding.getInterceptorClass()
f / t
method.getModifiers()
samples[1]
getComponentName()
PlanTaskLocationHint.newBuilder()
buf.get()
ByteBuffer.wrap(dob.getData(),0,dob.getLength())
getRebindMode()
call.rel(0)
loadClass(className)
(Document)propertyValue
appContext.getClock().getTime()
new byte[5]
app.getAttribute(Attributes.SERVICE_STATE_ACTUAL)
listItem.getModelObject()
assemblyFactory.createProperty()
m.group(7)
new UrlSet()
def.getRequiredType()
DomUtil.createDocument()
delivery.getRemoteState()
iterator.get()
samples[2]
(String)event.getNewValue()
(AnnotationFS)fs
Stopwatch.createUnstarted()
docIdSet.iterator()
(ListIterator<E>)iterator
context.plan
new HashSet<IRI>()
event.getComponent()
getCachedLogSegments(LogSegmentMetadata.DESC_COMPARATOR)
getAssembler()
request.getRequestedSessionId()
original
(AbstractOperatorWithNestedPlans)op
session.getAttributeNames()
mgmt.getConfig()
visit(ctx,stack,expr.getLeft())
context.getTargetDataType()
jp.getCurrentName()
new Location()
dataType.getPhysical()
range.getStart()
is.read_long()
"localhost"
a + b
op.getOutputWrapper()
opRef.getValue()
new ChangeRecord()
new ArrayList<>(artifacts.size())
processorBinding.getBoundActivity()
service.getInterfaceContract()
volumeMap.get(b.getBlockPoolId(),b.getLocalBlock())
new int[newCapacity]
calendar.getTimeInMillis()
fs.globStatus(p)
new TraceContext()
new HashMap<QName,PolicySet>()
new TajoConf()
event.getBundle()
new ObjectInputStream(in)
operation.getOutputWrapper()
getInput()
getPassword(conf,passwordProperty,"")
context.plan.createNode(GroupbyNode.class)
msg.getOperation().getName()
new DefaultParser()
ArtifactUtils.versionlessKey(artifact)
getDigester().peek()
this.ackInfo.getOffsets().get(this.ackInfo.getTopicPartition())
new Credential()
column.getDataType()
new ServerMetaData()
new LinkedList<ScanInfo>()
new Model<>()
new StringBuffer(64)
con.getMetaData()
ObjectModelHelper.getRequest(objectModel)
sample
reader.getValue()
resource.getResourceName()
new HashMap<Long,Integer>()
getCurrentStack()
parseInt(2,2)
new ArrayList<HashMap<String,String>>()
logs.next()
reader.getAttributeValue(null,"name")
new InjectionTarget()
shardIterator.next()
cmd.trim()
Version.emptyVersion
method.methodName
component.getImplementation()
new SimpleGraph()
bytes[start]
new ArrayList<FieldSchema>()
new int[width]
new String[len]
new COSArray()
(BPELPartnerLinkTypeExt)theElement
cluster.getClusterStatus()
value.indexOf(':')
100000
timeout
new BigInteger(elementReader.getElementAsString())
(String)e.next()
new Flags()
buff.toString()
readLifecycleCallback(elementReader,context)
varRef.getVariableReference()
uriBC.getStart()
(Map<?,?>)object
rs.getString(5)
diskVolumeLoads.get(volumeId)
(List)imports
chunk.getInt2(0)
Integer.parseInt(parts[1])
UDFContext.getUDFContext()
new SAXSource(xmlFilter,new InputSource(in))
javaFactory.createJavaInterfaceContract()
ActivationGroup.getSystem()
0xff & (rgb >> 16)
new double[length]
source.next()
"en"
consumer.getJndiConsumerName()
pValue.charAt(i++)
new DojoResourceServlet()
new SecurityConstraint()
(EntityManager)transactionRegistry.getResource(txKey)
src.remaining()
getStatistics()
checksum.getBytesPerChecksum()
resultSet.getString(2)
new TreeMap<String,List<String>>()
new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST,iprot.readI32())
clazz.getName().replace(".","/") + ".class"
resource.getProject()
joinNode.getLeftChild()
new ArrayList<NameValuePair>()
new StringBuilder(ejbCreate.getName())
new DataByteArrayOutputStream()
conn.prepareStatement(query)
new AdminObject()
new int[sz]
new int[16]
getLocator()
(MethodPermissionInfo)entry.getValue()
atts.getQName(i)
get(methodName)
new HashSet<Artifact>()
MutableList.of()
new DavPropertySet()
bounds.width
ep.getEndpointInfo().getBinding()
getRowCount()
outputContext.getUniqueIdentifier()
new Class[0]
prev[i] & 0xff
clazz.getAnnotation(Resource.class)
(String)names.nextElement()
objects.get(i)
schema.getFields()
SecureRandom.getInstance("SHA1PRNG")
new GsonBuilder()
new DataInputStream(bis)
JAXBContextFactory.newInstance(type)
Time.monotonicNow()
new TernaryTree()
new File(conf,"logging.properties")
System.currentTimeMillis() + timeout
new SimpleModule()
Records.newRecord(LocalResource.class)
buffer.getShort()
queryName.toString()
Long.parseLong(parts[5])
KeyStore.getInstance(storeType)
rs.getLong("id")
creds.getUser()
new File(source)
new Gson().fromJson(input.getContentAsString(),Map.class)
jfifPieces.pieces
message.getContent(Exception.class)
element.get()
messageContext.getResponseMessage()
(Integer)val
config.split(",")
factoryClass.newInstance()
tracker.getHeartRate()
document.createElement("attribute")
memento.getMasterNodeId()
tkn.nextToken()
xmlReader.getName()
(TaskEventTAUpdate)event
context.getConfig()
fields.length
(ClusterManager)manager
stateLocator.getSortState()
dir.getAbsolutePath()
readChar()
convertToPrivilege(privilege)
entry.getKey().getColumnQualifier().toString()
new ArrayList<>(rows.size())
Locations.findUniqueMachineLocation(locations)
evalNode.getRightExpr()
node.next
statements.next()
attributes.get(i)
("1".equals(elementReader.getElementAsString()) || "true".equals(elementReader.getElementAsString()))
child.getAttribute("name")
ManagementFactory.getMemoryMXBean()
getColorModel()
host.getParent()
new LinkedHashSet<SubscriptionHandle>()
new FaultBeanGenerator()
client.getStub()
component.getPreferredSize()
factory.createInOnlyExchange()
LogManager.getLogManager()
outputSpec.getDestinationVertexName()
beanContext.getJndiEnc()
beanInfo.getPropertyDescriptors()
locale.toString()
index >> 6
cs.getLocation()
new LinkedList<T>()
readName()
pair.getLeft()
annotation.name()
element.getLocalPart()
registry.getExtensionPoint(StAXArtifactProcessorExtensionPoint.class)
getApplicationLifecycleListeners()
new ArrayList<OMElement>()
msg.getBindingContext()
uriPath.toUri().getScheme()
options.get("port",6142)
new JndiNameInfo()
schemaInfo.elements.get(wrapperName)
file.getLen()
callContext.getCurrentOperation()
parser.getAttributeLocalName(i)
m.getReturnType()
request.getServerPort()
new ArrayList<JobExecutionInfoResource>()
(!message.isEmpty()) ? message.get(0).getLineNumber() : 0
op.getInputWrapper()
properties.getUserId()
new ArrayList<Subscription>()
readIcon(elementReader,context)
masterPlan.newExecutionBlock()
MAX_RETRIES
entity.getAttribute(Attributes.HOSTNAME)
new Activity()
(long)value
channel.position()
realClassName(rawClassName)
new CompletableFuture<URI>()
fs.listStatus(p)
getClass().getClassLoader()
new StringBuilder(sql.length())
member.getLocations()
persistenceContext.name()
entries[index]
new Object[source.length]
fs.getFileStatus(src)
getDataModel()
new Agent()
e.getLocalizedMessage()
children
c.size()
new Import_impl()
element.getAttribute(ID_ATTRIBUTE)
getEvent()
new Parameter()
names.iterator()
boolQuery()
ResourcesPlugin.getWorkspace()
new BusinessInterfaces()
getSeedQuorumSize()
project.getDependencyArtifacts()
f.getAnnotation(SetFromFlag.class)
getAttribute(MANAGED_DOMAIN)
new TableColumn(table,SWT.LEFT)
new ArrayList<Partition>()
group(1)
getEditorInput()
threadLocal.get()
pb.start()
config.getProperties()
new DefaultMessageBuilder()
new ArrayList<LogSegmentMetadata>(logSegments.size())
new HashSet<Class>()
beanContext.getBusinessLocalInterfaces()
BrooklynMementoRawData.builder()
input.position()
prop.getType()
stop - start
getWrappedPart(inputMessage)
new Permissions()
identifier.toString()
text.toString()
index & 0x3f
getExchangeFactory().createInOutExchange()
new Object[count]
(AbstractFunctionCallExpression)expr
Collections.emptyIterator()
scanner.getIncludedFiles()
tryLoadJavaType(localType,loader)
bitParser.getSampleAsByte(pixelIndexInScanline,0)
new ArrayList<JobStatus>()
queue[s]
getBody(requestEnvelope,messageContext)
directory.getTiffRawImageDataElements()
new ArrayList<BeanProperty>()
new HashSet<Watcher>()
entity.getAttribute(SERVICE_UP)
child.getNodeName()
new BigDecimal(0)
reader.getNext()
facesContext.getViewRoot()
crc.getValue()
new GregorianCalendar(timezone)
exchange.createMessage()
new ArrayList<FileOperation>()
columns.get(i)
new ArrayList<ContainerId>()
bitParser.getSampleAsByte(pixelIndexInScanline,1)
(Map<?,?>)obj
response
iterable.iterator()
0xff & bytes[index++]
getNameForSharedSecurityGroup()
new BufferedReader(isr)